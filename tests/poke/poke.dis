
poke.elf:     file format elf32-zpu

Disassembly of section .fixed_vectors:

00000000 <_start>:
   0:	0b          	nop
   1:	0b          	nop
   2:	0b          	nop
   3:	8f          	im 15
   4:	83          	im 3
   5:	04          	poppc
	...

00000020 <_zpu_interrupt_vector>:
  20:	0b          	nop
  21:	0b          	nop
  22:	0b          	nop
  23:	89          	im 9
  24:	8f          	im 15
  25:	04          	poppc
	...

00000040 <_loadh>:
  40:	71          	loadsp 4
  41:	fd          	im -3
  42:	06          	and
  43:	08          	load
  44:	72          	loadsp 8
  45:	83          	im 3
  46:	06          	and
  47:	09          	not
  48:	81          	im 1
  49:	05          	add
  4a:	82          	im 2
  4b:	05          	add
  4c:	83          	im 3
  4d:	2b          	ashiftleft
  4e:	2a          	lshiftright
  4f:	83          	im 3
  50:	ff          	im -1
  51:	ff          	im -1
  52:	06          	and
  53:	52          	storesp 8
  54:	04          	poppc
	...

00000060 <_storeh>:
  60:	71          	loadsp 4
  61:	fd          	im -3
  62:	06          	and
  63:	08          	load
  64:	83          	im 3
  65:	ff          	im -1
  66:	ff          	im -1
  67:	73          	loadsp 12
  68:	83          	im 3
  69:	06          	and
  6a:	09          	not
  6b:	81          	im 1
  6c:	05          	add
  6d:	82          	im 2
  6e:	05          	add
  6f:	83          	im 3
  70:	2b          	ashiftleft
  71:	2b          	ashiftleft
  72:	09          	not
  73:	06          	and
  74:	73          	loadsp 12
  75:	83          	im 3
  76:	ff          	im -1
  77:	ff          	im -1
  78:	0b          	nop
  79:	0b          	nop
  7a:	0b          	nop
  7b:	0b          	nop
  7c:	83          	im 3
  7d:	a7          	im 39
  7e:	04          	poppc
	...

00000080 <_lessthan>:
  80:	72          	loadsp 8
  81:	09          	not
  82:	81          	im 1
  83:	05          	add
  84:	72          	loadsp 8
  85:	05          	add
  86:	73          	loadsp 12
  87:	73          	loadsp 12
  88:	09          	not
  89:	06          	and
  8a:	09          	not
  8b:	06          	and
  8c:	73          	loadsp 12
  8d:	09          	not
  8e:	73          	loadsp 12
  8f:	06          	and
  90:	07          	or
  91:	0a          	flip
  92:	81          	im 1
  93:	06          	and
  94:	53          	storesp 12
  95:	51          	storesp 4
  96:	04          	poppc
	...

000000a0 <_lessthanorequal>:
  a0:	72          	loadsp 8
  a1:	72          	loadsp 8
  a2:	24          	lessthan
  a3:	73          	loadsp 12
  a4:	73          	loadsp 12
  a5:	2e          	eq
  a6:	07          	or
  a7:	53          	storesp 12
  a8:	51          	storesp 4
  a9:	04          	poppc
	...

000000c0 <_ulessthan>:
  c0:	71          	loadsp 4
  c1:	73          	loadsp 12
  c2:	71          	loadsp 4
  c3:	09          	not
  c4:	71          	loadsp 4
  c5:	06          	and
  c6:	81          	im 1
  c7:	06          	and
  c8:	30          	neg
  c9:	72          	loadsp 8
  ca:	0a          	flip
  cb:	10          	addsp 0
  cc:	0a          	flip
  cd:	72          	loadsp 8
  ce:	0a          	flip
  cf:	10          	addsp 0
  d0:	0a          	flip
  d1:	31          	sub
  d2:	05          	add
  d3:	0a          	flip
  d4:	81          	im 1
  d5:	06          	and
  d6:	51          	storesp 4
  d7:	51          	storesp 4
  d8:	53          	storesp 12
  d9:	51          	storesp 4
  da:	04          	poppc
  db:	00          	breakpoint
  dc:	00          	breakpoint
  dd:	00          	breakpoint
	...

000000e0 <_ulessthanorequal>:
  e0:	72          	loadsp 8
  e1:	72          	loadsp 8
  e2:	26          	ulessthan
  e3:	73          	loadsp 12
  e4:	73          	loadsp 12
  e5:	2e          	eq
  e6:	07          	or
  e7:	53          	storesp 12
  e8:	51          	storesp 4
  e9:	04          	poppc
	...

00000100 <_swap>:
	...

00000120 <_slowmult>:
 120:	0b          	nop
 121:	0b          	nop
 122:	0b          	nop
 123:	88          	im 8
 124:	c3          	im -61
 125:	04          	poppc
	...

00000140 <_lshiftright>:
 140:	72          	loadsp 8
 141:	0a          	flip
 142:	72          	loadsp 8
 143:	2b          	ashiftleft
 144:	0a          	flip
 145:	53          	storesp 12
 146:	51          	storesp 4
 147:	04          	poppc
	...

00000160 <_ashiftleft>:
 160:	72          	loadsp 8
 161:	72          	loadsp 8
 162:	9f          	im 31
 163:	06          	and
 164:	09          	not
 165:	81          	im 1
 166:	05          	add
 167:	0b          	nop
 168:	0b          	nop
 169:	0b          	nop
 16a:	88          	im 8
 16b:	a6          	im 38
 16c:	05          	add
 16d:	04          	poppc
	...

00000180 <_ashiftright>:
 180:	72          	loadsp 8
 181:	72          	loadsp 8
 182:	2a          	lshiftright
 183:	ff          	im -1
 184:	73          	loadsp 12
 185:	9f          	im 31
 186:	06          	and
 187:	2a          	lshiftright
 188:	09          	not
 189:	74          	loadsp 16
 18a:	09          	not
 18b:	0a          	flip
 18c:	81          	im 1
 18d:	06          	and
 18e:	ff          	im -1
 18f:	05          	add
 190:	06          	and
 191:	07          	or
 192:	53          	storesp 12
 193:	51          	storesp 4
 194:	04          	poppc
	...

000001a0 <_call>:
 1a0:	71          	loadsp 4
 1a1:	71          	loadsp 4
 1a2:	53          	storesp 12
 1a3:	51          	storesp 4
 1a4:	02          	pushsp
 1a5:	0d          	popsp
 1a6:	04          	poppc

000001a7 <_storehtail>:
 1a7:	06          	and
 1a8:	73          	loadsp 12
 1a9:	83          	im 3
 1aa:	06          	and
 1ab:	09          	not
 1ac:	81          	im 1
 1ad:	05          	add
 1ae:	82          	im 2
 1af:	05          	add
 1b0:	83          	im 3
 1b1:	2b          	ashiftleft
 1b2:	0b          	nop
 1b3:	2b          	ashiftleft
 1b4:	07          	or
 1b5:	72          	loadsp 8
 1b6:	fc          	im -4
 1b7:	06          	and
 1b8:	0c          	store
 1b9:	51          	storesp 4
 1ba:	51          	storesp 4
 1bb:	04          	poppc
 1bc:	00          	breakpoint
 1bd:	00          	breakpoint
	...

000001c0 <_eq>:
 1c0:	72          	loadsp 8
 1c1:	09          	not
 1c2:	81          	im 1
 1c3:	05          	add
 1c4:	72          	loadsp 8
 1c5:	05          	add
 1c6:	09          	not
 1c7:	70          	loadsp 0
 1c8:	81          	im 1
 1c9:	05          	add
 1ca:	09          	not
 1cb:	06          	and
 1cc:	0a          	flip
 1cd:	81          	im 1
 1ce:	06          	and
 1cf:	53          	storesp 12
 1d0:	51          	storesp 4
 1d1:	04          	poppc
	...

000001e0 <_neq>:
 1e0:	72          	loadsp 8
 1e1:	09          	not
 1e2:	81          	im 1
 1e3:	05          	add
 1e4:	72          	loadsp 8
 1e5:	05          	add
 1e6:	09          	not
 1e7:	70          	loadsp 0
 1e8:	81          	im 1
 1e9:	05          	add
 1ea:	09          	not
 1eb:	06          	and
 1ec:	0a          	flip
 1ed:	09          	not
 1ee:	81          	im 1
 1ef:	06          	and
 1f0:	53          	storesp 12
 1f1:	51          	storesp 4
 1f2:	04          	poppc
	...

00000200 <_neg>:
 200:	71          	loadsp 4
 201:	09          	not
 202:	81          	im 1
 203:	05          	add
 204:	52          	storesp 8
 205:	04          	poppc
	...

00000220 <_sub>:
 220:	72          	loadsp 8
 221:	72          	loadsp 8
 222:	09          	not
 223:	81          	im 1
 224:	05          	add
 225:	05          	add
 226:	53          	storesp 12
 227:	51          	storesp 4
 228:	04          	poppc
	...

00000240 <_xor>:
 240:	72          	loadsp 8
 241:	09          	not
 242:	72          	loadsp 8
 243:	06          	and
 244:	73          	loadsp 12
 245:	73          	loadsp 12
 246:	09          	not
 247:	06          	and
 248:	07          	or
 249:	53          	storesp 12
 24a:	51          	storesp 4
 24b:	04          	poppc
	...

00000260 <_loadb>:
 260:	71          	loadsp 4
 261:	fc          	im -4
 262:	06          	and
 263:	08          	load
 264:	72          	loadsp 8
 265:	83          	im 3
 266:	06          	and
 267:	09          	not
 268:	81          	im 1
 269:	05          	add
 26a:	83          	im 3
 26b:	05          	add
 26c:	10          	addsp 0
 26d:	10          	addsp 0
 26e:	10          	addsp 0
 26f:	2a          	lshiftright
 270:	81          	im 1
 271:	ff          	im -1
 272:	06          	and
 273:	52          	storesp 8
 274:	04          	poppc
	...

00000280 <_storeb>:
 280:	71          	loadsp 4
 281:	fc          	im -4
 282:	06          	and
 283:	08          	load
 284:	0b          	nop
 285:	0b          	nop
 286:	0b          	nop
 287:	91          	im 17
 288:	94          	im 20
 289:	73          	loadsp 12
 28a:	83          	im 3
 28b:	06          	and
 28c:	10          	addsp 0
 28d:	10          	addsp 0
 28e:	05          	add
 28f:	08          	load
 290:	06          	and
 291:	0b          	nop
 292:	0b          	nop
 293:	0b          	nop
 294:	88          	im 8
 295:	a9          	im 41
 296:	04          	poppc
	...

000002a0 <_div>:
 2a0:	0b          	nop
 2a1:	0b          	nop
 2a2:	0b          	nop
 2a3:	88          	im 8
 2a4:	f7          	im -9
 2a5:	04          	poppc
	...

000002c0 <_mod>:
 2c0:	0b          	nop
 2c1:	0b          	nop
 2c2:	0b          	nop
 2c3:	88          	im 8
 2c4:	df          	im -33
 2c5:	04          	poppc
	...

000002e0 <_eqbranch>:
 2e0:	72          	loadsp 8
 2e1:	09          	not
 2e2:	70          	loadsp 0
 2e3:	81          	im 1
 2e4:	05          	add
 2e5:	09          	not
 2e6:	06          	and
 2e7:	0a          	flip
 2e8:	81          	im 1
 2e9:	06          	and
 2ea:	ff          	im -1
 2eb:	05          	add
 2ec:	70          	loadsp 0
 2ed:	54          	storesp 16
 2ee:	71          	loadsp 4
 2ef:	06          	and
 2f0:	73          	loadsp 12
 2f1:	09          	not
 2f2:	72          	loadsp 8
 2f3:	74          	loadsp 16
 2f4:	05          	add
 2f5:	ff          	im -1
 2f6:	05          	add
 2f7:	06          	and
 2f8:	07          	or
 2f9:	51          	storesp 4
 2fa:	51          	storesp 4
 2fb:	51          	storesp 4
 2fc:	04          	poppc
 2fd:	00          	breakpoint
	...

00000300 <_neqbranch>:
 300:	72          	loadsp 8
 301:	09          	not
 302:	70          	loadsp 0
 303:	81          	im 1
 304:	05          	add
 305:	09          	not
 306:	06          	and
 307:	0a          	flip
 308:	09          	not
 309:	81          	im 1
 30a:	06          	and
 30b:	ff          	im -1
 30c:	05          	add
 30d:	70          	loadsp 0
 30e:	54          	storesp 16
 30f:	71          	loadsp 4
 310:	06          	and
 311:	73          	loadsp 12
 312:	09          	not
 313:	72          	loadsp 8
 314:	74          	loadsp 16
 315:	05          	add
 316:	ff          	im -1
 317:	05          	add
 318:	06          	and
 319:	07          	or
 31a:	51          	storesp 4
 31b:	51          	storesp 4
 31c:	51          	storesp 4
 31d:	04          	poppc
	...

00000320 <_poppcrel>:
 320:	05          	add
 321:	ff          	im -1
 322:	05          	add
 323:	04          	poppc
	...

00000340 <_config>:
 340:	81          	im 1
 341:	0b          	nop
 342:	0b          	nop
 343:	0b          	nop
 344:	0b          	nop
 345:	91          	im 17
 346:	b8          	im 56
 347:	0c          	store
 348:	51          	storesp 4
 349:	04          	poppc
	...

00000360 <_pushpc>:
 360:	71          	loadsp 4
 361:	81          	im 1
 362:	05          	add
 363:	52          	storesp 8
 364:	04          	poppc
	...

00000380 <_syscall_emulate>:
	...

000003a0 <_pushspadd>:
 3a0:	02          	pushsp
 3a1:	84          	im 4
 3a2:	05          	add
 3a3:	72          	loadsp 8
 3a4:	10          	addsp 0
 3a5:	10          	addsp 0
 3a6:	05          	add
 3a7:	52          	storesp 8
 3a8:	04          	poppc
	...

000003c0 <_halfmult>:
	...

000003e0 <_callpcrel>:
 3e0:	71          	loadsp 4
 3e1:	71          	loadsp 4
 3e2:	05          	add
 3e3:	ff          	im -1
 3e4:	05          	add
 3e5:	71          	loadsp 4
 3e6:	53          	storesp 12
 3e7:	51          	storesp 4
 3e8:	02          	pushsp
 3e9:	0d          	popsp
 3ea:	04          	poppc
	...
Disassembly of section .init:

00000400 <_init>:
 400:	82          	im 2
 401:	b0          	im 48
 402:	3f          	callpcrel
 403:	88          	im 8
 404:	e3          	im -29
 405:	3f          	callpcrel
 406:	04          	poppc
Disassembly of section .text:

00000407 <_ashiftleftBegin>:
 407:	10          	addsp 0
 408:	10          	addsp 0
 409:	10          	addsp 0
 40a:	10          	addsp 0
 40b:	10          	addsp 0
 40c:	10          	addsp 0
 40d:	10          	addsp 0
 40e:	10          	addsp 0
 40f:	10          	addsp 0
 410:	10          	addsp 0
 411:	10          	addsp 0
 412:	10          	addsp 0
 413:	10          	addsp 0
 414:	10          	addsp 0
 415:	10          	addsp 0
 416:	10          	addsp 0
 417:	10          	addsp 0
 418:	10          	addsp 0
 419:	10          	addsp 0
 41a:	10          	addsp 0
 41b:	10          	addsp 0
 41c:	10          	addsp 0
 41d:	10          	addsp 0
 41e:	10          	addsp 0
 41f:	10          	addsp 0
 420:	10          	addsp 0
 421:	10          	addsp 0
 422:	10          	addsp 0
 423:	10          	addsp 0
 424:	10          	addsp 0
 425:	10          	addsp 0

00000426 <_ashiftleftEnd>:
 426:	53          	storesp 12
 427:	51          	storesp 4
 428:	04          	poppc

00000429 <_storebtail>:
 429:	73          	loadsp 12
 42a:	81          	im 1
 42b:	ff          	im -1
 42c:	06          	and
 42d:	73          	loadsp 12
 42e:	83          	im 3
 42f:	06          	and
 430:	09          	not
 431:	81          	im 1
 432:	05          	add
 433:	83          	im 3
 434:	05          	add
 435:	10          	addsp 0
 436:	10          	addsp 0
 437:	10          	addsp 0
 438:	2b          	ashiftleft
 439:	07          	or
 43a:	72          	loadsp 8
 43b:	fc          	im -4
 43c:	06          	and
 43d:	0c          	store
 43e:	51          	storesp 4
 43f:	51          	storesp 4
 440:	04          	poppc

00000441 <_syscall>:
 441:	3c          	syscall
 442:	04          	poppc

00000443 <_slowmultImpl>:
 443:	72          	loadsp 8
 444:	72          	loadsp 8
 445:	80          	im 0
 446:	72          	loadsp 8
 447:	81          	im 1
 448:	06          	and
 449:	ff          	im -1
 44a:	05          	add
 44b:	09          	not
 44c:	72          	loadsp 8
 44d:	06          	and
 44e:	05          	add
 44f:	71          	loadsp 4
 450:	10          	addsp 0
 451:	52          	storesp 8
 452:	72          	loadsp 8
 453:	0a          	flip
 454:	10          	addsp 0
 455:	0a          	flip
 456:	53          	storesp 12
 457:	72          	loadsp 8
 458:	ed          	im -19
 459:	38          	neqbranch
 45a:	51          	storesp 4
 45b:	51          	storesp 4
 45c:	53          	storesp 12
 45d:	51          	storesp 4
 45e:	04          	poppc

0000045f <___mod>:
 45f:	80          	im 0
 460:	08          	load
 461:	84          	im 4
 462:	08          	load
 463:	88          	im 8
 464:	08          	load
 465:	75          	loadsp 20
 466:	75          	loadsp 20
 467:	8c          	im 12
 468:	b9          	im 57
 469:	2d          	call
 46a:	50          	storesp 0
 46b:	50          	storesp 0
 46c:	80          	im 0
 46d:	08          	load
 46e:	56          	storesp 24
 46f:	88          	im 8
 470:	0c          	store
 471:	84          	im 4
 472:	0c          	store
 473:	80          	im 0
 474:	0c          	store
 475:	51          	storesp 4
 476:	04          	poppc

00000477 <___div>:
 477:	80          	im 0
 478:	08          	load
 479:	84          	im 4
 47a:	08          	load
 47b:	88          	im 8
 47c:	08          	load
 47d:	75          	loadsp 20
 47e:	75          	loadsp 20
 47f:	8b          	im 11
 480:	87          	im 7
 481:	2d          	call
 482:	50          	storesp 0
 483:	50          	storesp 0
 484:	80          	im 0
 485:	08          	load
 486:	56          	storesp 24
 487:	88          	im 8
 488:	0c          	store
 489:	84          	im 4
 48a:	0c          	store
 48b:	80          	im 0
 48c:	0c          	store
 48d:	51          	storesp 4
 48e:	04          	poppc

0000048f <___zpu_interrupt_vector>:
 48f:	80          	im 0
 490:	08          	load
 491:	84          	im 4
 492:	08          	load
 493:	88          	im 8
 494:	08          	load
 495:	8f          	im 15
 496:	c3          	im -61
 497:	2d          	call
 498:	88          	im 8
 499:	0c          	store
 49a:	84          	im 4
 49b:	0c          	store
 49c:	80          	im 0
 49d:	0c          	store
 49e:	04          	poppc

0000049f <_initIO>:
 49f:	91          	im 17
 4a0:	b8          	im 56
 4a1:	08          	load
 4a2:	80          	im 0
 4a3:	2e          	eq
 4a4:	a1          	im 33
 4a5:	38          	neqbranch

000004a6 <.LSM10>:
 4a6:	91          	im 17
 4a7:	bc          	im 60
 4a8:	08          	load
 4a9:	82          	im 2
 4aa:	2e          	eq
 4ab:	b9          	im 57
 4ac:	38          	neqbranch

000004ad <.LSM11>:
 4ad:	83          	im 3
 4ae:	80          	im 0
 4af:	80          	im 0
 4b0:	0b          	nop
 4b1:	0b          	nop
 4b2:	0b          	nop
 4b3:	0b          	nop
 4b4:	98          	im 24
 4b5:	e0          	im -32
 4b6:	0c          	store

000004b7 <.LSM12>:
 4b7:	82          	im 2
 4b8:	a0          	im 32
 4b9:	80          	im 0
 4ba:	0b          	nop
 4bb:	98          	im 24
 4bc:	e4          	im -28
 4bd:	0c          	store

000004be <.LSM13>:
 4be:	82          	im 2
 4bf:	90          	im 16
 4c0:	80          	im 0
 4c1:	0b          	nop
 4c2:	98          	im 24
 4c3:	e8          	im -24
 4c4:	0c          	store

000004c5 <.LSM14>:
 4c5:	04          	poppc

000004c6 <.L11>:
 4c6:	f8          	im -8
 4c7:	80          	im 0
 4c8:	80          	im 0
 4c9:	80          	im 0
 4ca:	a4          	im 36
 4cb:	0b          	nop
 4cc:	0b          	nop
 4cd:	0b          	nop
 4ce:	0b          	nop
 4cf:	98          	im 24
 4d0:	e0          	im -32
 4d1:	0c          	store

000004d2 <.LSM16>:
 4d2:	f8          	im -8
 4d3:	80          	im 0
 4d4:	80          	im 0
 4d5:	82          	im 2
 4d6:	80          	im 0
 4d7:	0b          	nop
 4d8:	98          	im 24
 4d9:	e4          	im -28
 4da:	0c          	store

000004db <.LSM17>:
 4db:	f8          	im -8
 4dc:	80          	im 0
 4dd:	80          	im 0
 4de:	84          	im 4
 4df:	80          	im 0
 4e0:	0b          	nop
 4e1:	98          	im 24
 4e2:	e8          	im -24
 4e3:	0c          	store

000004e4 <.LSM18>:
 4e4:	04          	poppc

000004e5 <.L16>:
 4e5:	80          	im 0
 4e6:	c0          	im -64
 4e7:	a8          	im 40
 4e8:	80          	im 0
 4e9:	8c          	im 12
 4ea:	0b          	nop
 4eb:	0b          	nop
 4ec:	0b          	nop
 4ed:	0b          	nop
 4ee:	98          	im 24
 4ef:	e0          	im -32
 4f0:	0c          	store

000004f1 <.LSM20>:
 4f1:	80          	im 0
 4f2:	c0          	im -64
 4f3:	a8          	im 40
 4f4:	80          	im 0
 4f5:	94          	im 20
 4f6:	0b          	nop
 4f7:	98          	im 24
 4f8:	e4          	im -28
 4f9:	0c          	store

000004fa <.LSM21>:
 4fa:	91          	im 17
 4fb:	a4          	im 36
 4fc:	0b          	nop
 4fd:	98          	im 24
 4fe:	e8          	im -24
 4ff:	0c          	store

00000500 <.LSM22>:
 500:	04          	poppc

00000501 <__do_global_dtors_aux>:
 501:	ff          	im -1
 502:	3d          	pushspadd
 503:	0d          	popsp
 504:	98          	im 24
 505:	ec          	im -20
 506:	33          	loadb
 507:	51          	storesp 4
 508:	70          	loadsp 0
 509:	a3          	im 35
 50a:	38          	neqbranch
 50b:	91          	im 17
 50c:	c4          	im -60
 50d:	08          	load
 50e:	70          	loadsp 0
 50f:	08          	load
 510:	52          	storesp 8
 511:	52          	storesp 8
 512:	70          	loadsp 0
 513:	80          	im 0
 514:	2e          	eq
 515:	92          	im 18
 516:	38          	neqbranch

00000517 <.L10>:
 517:	84          	im 4
 518:	12          	addsp 8
 519:	91          	im 17
 51a:	c4          	im -60
 51b:	0c          	store
 51c:	70          	loadsp 0
 51d:	2d          	call
 51e:	91          	im 17
 51f:	c4          	im -60
 520:	08          	load
 521:	70          	loadsp 0
 522:	08          	load
 523:	52          	storesp 8
 524:	52          	storesp 8
 525:	70          	loadsp 0
 526:	f0          	im -16
 527:	38          	neqbranch

00000528 <.L7>:
 528:	81          	im 1
 529:	0b          	nop
 52a:	98          	im 24
 52b:	ec          	im -20
 52c:	34          	storeb

0000052d <.L1>:
 52d:	83          	im 3
 52e:	3d          	pushspadd
 52f:	0d          	popsp
 530:	04          	poppc

00000531 <call___do_global_dtors_aux>:
 531:	04          	poppc

00000532 <frame_dummy>:
 532:	80          	im 0
 533:	3d          	pushspadd
 534:	0d          	popsp
 535:	0b          	nop
 536:	0b          	nop
 537:	0b          	nop
 538:	98          	im 24
 539:	dc          	im -36
 53a:	08          	load
 53b:	80          	im 0
 53c:	2e          	eq
 53d:	8e          	im 14
 53e:	38          	neqbranch
 53f:	0b          	nop
 540:	0b          	nop
 541:	0b          	nop
 542:	0b          	nop
 543:	80          	im 0
 544:	0b          	nop
 545:	80          	im 0
 546:	2e          	eq
 547:	09          	not
 548:	81          	im 1
 549:	06          	and
 54a:	85          	im 5
 54b:	38          	neqbranch

0000054c <.L12>:
 54c:	82          	im 2
 54d:	3d          	pushspadd
 54e:	0d          	popsp
 54f:	04          	poppc

00000550 <.L15>:
 550:	0b          	nop
 551:	0b          	nop
 552:	0b          	nop
 553:	98          	im 24
 554:	dc          	im -36
 555:	51          	storesp 4
 556:	0b          	nop
 557:	0b          	nop
 558:	0b          	nop
 559:	f5          	im -11
 55a:	a5          	im 37
 55b:	3f          	callpcrel
 55c:	82          	im 2
 55d:	3d          	pushspadd
 55e:	0d          	popsp
 55f:	04          	poppc

00000560 <call_frame_dummy>:
 560:	04          	poppc

00000561 <main>:
 561:	8c          	im 12
 562:	08          	load
 563:	02          	pushsp
 564:	8c          	im 12
 565:	0c          	store
 566:	80          	im 0
 567:	3d          	pushspadd
 568:	0d          	popsp
 569:	80          	im 0
 56a:	0b          	nop
 56b:	8c          	im 12
 56c:	08          	load
 56d:	fc          	im -4
 56e:	05          	add
 56f:	0c          	store

00000570 <.L2>:
 570:	8c          	im 12
 571:	08          	load
 572:	fc          	im -4
 573:	05          	add
 574:	08          	load
 575:	82          	im 2
 576:	80          	im 0
 577:	80          	im 0
 578:	0c          	store
 579:	8c          	im 12
 57a:	08          	load
 57b:	fc          	im -4
 57c:	05          	add
 57d:	08          	load
 57e:	81          	im 1
 57f:	05          	add
 580:	8c          	im 12
 581:	08          	load
 582:	fc          	im -4
 583:	05          	add
 584:	0c          	store
 585:	ea          	im -22
 586:	39          	poppcrel

00000587 <__divsi3>:
 587:	8c          	im 12
 588:	08          	load
 589:	02          	pushsp
 58a:	8c          	im 12
 58b:	0c          	store
 58c:	f9          	im -7
 58d:	3d          	pushspadd
 58e:	0d          	popsp
 58f:	80          	im 0
 590:	0b          	nop
 591:	8c          	im 12
 592:	08          	load
 593:	fc          	im -4
 594:	05          	add
 595:	0c          	store
 596:	8c          	im 12
 597:	08          	load
 598:	88          	im 8
 599:	05          	add
 59a:	08          	load
 59b:	80          	im 0
 59c:	25          	lessthanorequal
 59d:	ab          	im 43
 59e:	38          	neqbranch
 59f:	8c          	im 12
 5a0:	08          	load
 5a1:	88          	im 8
 5a2:	05          	add
 5a3:	08          	load
 5a4:	30          	neg
 5a5:	8c          	im 12
 5a6:	08          	load
 5a7:	88          	im 8
 5a8:	05          	add
 5a9:	0c          	store
 5aa:	80          	im 0
 5ab:	0b          	nop
 5ac:	8c          	im 12
 5ad:	08          	load
 5ae:	f4          	im -12
 5af:	05          	add
 5b0:	0c          	store
 5b1:	8c          	im 12
 5b2:	08          	load
 5b3:	fc          	im -4
 5b4:	05          	add
 5b5:	08          	load
 5b6:	88          	im 8
 5b7:	38          	neqbranch
 5b8:	81          	im 1
 5b9:	0b          	nop
 5ba:	8c          	im 12
 5bb:	08          	load
 5bc:	f4          	im -12
 5bd:	05          	add
 5be:	0c          	store

000005bf <.L3>:
 5bf:	8c          	im 12
 5c0:	08          	load
 5c1:	f4          	im -12
 5c2:	05          	add
 5c3:	08          	load
 5c4:	8c          	im 12
 5c5:	08          	load
 5c6:	fc          	im -4
 5c7:	05          	add
 5c8:	0c          	store

000005c9 <.L2>:
 5c9:	8c          	im 12
 5ca:	08          	load
 5cb:	8c          	im 12
 5cc:	05          	add
 5cd:	08          	load
 5ce:	80          	im 0
 5cf:	25          	lessthanorequal
 5d0:	ab          	im 43
 5d1:	38          	neqbranch
 5d2:	8c          	im 12
 5d3:	08          	load
 5d4:	8c          	im 12
 5d5:	05          	add
 5d6:	08          	load
 5d7:	30          	neg
 5d8:	8c          	im 12
 5d9:	08          	load
 5da:	8c          	im 12
 5db:	05          	add
 5dc:	0c          	store
 5dd:	80          	im 0
 5de:	0b          	nop
 5df:	8c          	im 12
 5e0:	08          	load
 5e1:	f0          	im -16
 5e2:	05          	add
 5e3:	0c          	store
 5e4:	8c          	im 12
 5e5:	08          	load
 5e6:	fc          	im -4
 5e7:	05          	add
 5e8:	08          	load
 5e9:	88          	im 8
 5ea:	38          	neqbranch
 5eb:	81          	im 1
 5ec:	0b          	nop
 5ed:	8c          	im 12
 5ee:	08          	load
 5ef:	f0          	im -16
 5f0:	05          	add
 5f1:	0c          	store

000005f2 <.L5>:
 5f2:	8c          	im 12
 5f3:	08          	load
 5f4:	f0          	im -16
 5f5:	05          	add
 5f6:	08          	load
 5f7:	8c          	im 12
 5f8:	08          	load
 5f9:	fc          	im -4
 5fa:	05          	add
 5fb:	0c          	store

000005fc <.L4>:
 5fc:	80          	im 0
 5fd:	53          	storesp 12
 5fe:	8c          	im 12
 5ff:	08          	load
 600:	8c          	im 12
 601:	05          	add
 602:	08          	load
 603:	52          	storesp 8
 604:	8c          	im 12
 605:	08          	load
 606:	88          	im 8
 607:	05          	add
 608:	08          	load
 609:	51          	storesp 4
 60a:	81          	im 1
 60b:	a7          	im 39
 60c:	3f          	callpcrel
 60d:	80          	im 0
 60e:	08          	load
 60f:	70          	loadsp 0
 610:	8c          	im 12
 611:	08          	load
 612:	f8          	im -8
 613:	05          	add
 614:	0c          	store
 615:	54          	storesp 16
 616:	8c          	im 12
 617:	08          	load
 618:	fc          	im -4
 619:	05          	add
 61a:	08          	load
 61b:	80          	im 0
 61c:	2e          	eq
 61d:	8c          	im 12
 61e:	38          	neqbranch
 61f:	8c          	im 12
 620:	08          	load
 621:	f8          	im -8
 622:	05          	add
 623:	08          	load
 624:	30          	neg
 625:	8c          	im 12
 626:	08          	load
 627:	f8          	im -8
 628:	05          	add
 629:	0c          	store

0000062a <.L6>:
 62a:	8c          	im 12
 62b:	08          	load
 62c:	f8          	im -8
 62d:	05          	add
 62e:	08          	load
 62f:	70          	loadsp 0
 630:	80          	im 0
 631:	0c          	store
 632:	54          	storesp 16
 633:	89          	im 9
 634:	3d          	pushspadd
 635:	0d          	popsp
 636:	8c          	im 12
 637:	0c          	store
 638:	04          	poppc

00000639 <__modsi3>:
 639:	8c          	im 12
 63a:	08          	load
 63b:	02          	pushsp
 63c:	8c          	im 12
 63d:	0c          	store
 63e:	fb          	im -5
 63f:	3d          	pushspadd
 640:	0d          	popsp
 641:	80          	im 0
 642:	0b          	nop
 643:	8c          	im 12
 644:	08          	load
 645:	fc          	im -4
 646:	05          	add
 647:	0c          	store
 648:	8c          	im 12
 649:	08          	load
 64a:	88          	im 8
 64b:	05          	add
 64c:	08          	load
 64d:	80          	im 0
 64e:	25          	lessthanorequal
 64f:	93          	im 19
 650:	38          	neqbranch
 651:	8c          	im 12
 652:	08          	load
 653:	88          	im 8
 654:	05          	add
 655:	08          	load
 656:	30          	neg
 657:	8c          	im 12
 658:	08          	load
 659:	88          	im 8
 65a:	05          	add
 65b:	0c          	store
 65c:	81          	im 1
 65d:	0b          	nop
 65e:	8c          	im 12
 65f:	08          	load
 660:	fc          	im -4
 661:	05          	add
 662:	0c          	store

00000663 <.L8>:
 663:	8c          	im 12
 664:	08          	load
 665:	8c          	im 12
 666:	05          	add
 667:	08          	load
 668:	80          	im 0
 669:	25          	lessthanorequal
 66a:	8c          	im 12
 66b:	38          	neqbranch
 66c:	8c          	im 12
 66d:	08          	load
 66e:	8c          	im 12
 66f:	05          	add
 670:	08          	load
 671:	30          	neg
 672:	8c          	im 12
 673:	08          	load
 674:	8c          	im 12
 675:	05          	add
 676:	0c          	store

00000677 <.L9>:
 677:	81          	im 1
 678:	53          	storesp 12
 679:	8c          	im 12
 67a:	08          	load
 67b:	8c          	im 12
 67c:	05          	add
 67d:	08          	load
 67e:	52          	storesp 8
 67f:	8c          	im 12
 680:	08          	load
 681:	88          	im 8
 682:	05          	add
 683:	08          	load
 684:	51          	storesp 4
 685:	ad          	im 45
 686:	3f          	callpcrel
 687:	80          	im 0
 688:	08          	load
 689:	70          	loadsp 0
 68a:	8c          	im 12
 68b:	08          	load
 68c:	f8          	im -8
 68d:	05          	add
 68e:	0c          	store
 68f:	54          	storesp 16
 690:	8c          	im 12
 691:	08          	load
 692:	fc          	im -4
 693:	05          	add
 694:	08          	load
 695:	80          	im 0
 696:	2e          	eq
 697:	8c          	im 12
 698:	38          	neqbranch
 699:	8c          	im 12
 69a:	08          	load
 69b:	f8          	im -8
 69c:	05          	add
 69d:	08          	load
 69e:	30          	neg
 69f:	8c          	im 12
 6a0:	08          	load
 6a1:	f8          	im -8
 6a2:	05          	add
 6a3:	0c          	store

000006a4 <.L10>:
 6a4:	8c          	im 12
 6a5:	08          	load
 6a6:	f8          	im -8
 6a7:	05          	add
 6a8:	08          	load
 6a9:	70          	loadsp 0
 6aa:	80          	im 0
 6ab:	0c          	store
 6ac:	54          	storesp 16
 6ad:	87          	im 7
 6ae:	3d          	pushspadd
 6af:	0d          	popsp
 6b0:	8c          	im 12
 6b1:	0c          	store
 6b2:	04          	poppc

000006b3 <udivmodsi4>:
 6b3:	8c          	im 12
 6b4:	08          	load
 6b5:	02          	pushsp
 6b6:	8c          	im 12
 6b7:	0c          	store
 6b8:	fd          	im -3
 6b9:	3d          	pushspadd
 6ba:	0d          	popsp
 6bb:	81          	im 1
 6bc:	0b          	nop
 6bd:	8c          	im 12
 6be:	08          	load
 6bf:	fc          	im -4
 6c0:	05          	add
 6c1:	0c          	store
 6c2:	80          	im 0
 6c3:	0b          	nop
 6c4:	8c          	im 12
 6c5:	08          	load
 6c6:	f8          	im -8
 6c7:	05          	add
 6c8:	0c          	store

000006c9 <.L2>:
 6c9:	8c          	im 12
 6ca:	08          	load
 6cb:	8c          	im 12
 6cc:	05          	add
 6cd:	08          	load
 6ce:	8c          	im 12
 6cf:	08          	load
 6d0:	88          	im 8
 6d1:	05          	add
 6d2:	08          	load
 6d3:	27          	ulessthanorequal
 6d4:	ac          	im 44
 6d5:	38          	neqbranch
 6d6:	8c          	im 12
 6d7:	08          	load
 6d8:	fc          	im -4
 6d9:	05          	add
 6da:	08          	load
 6db:	80          	im 0
 6dc:	2e          	eq
 6dd:	a3          	im 35
 6de:	38          	neqbranch
 6df:	80          	im 0
 6e0:	0b          	nop
 6e1:	8c          	im 12
 6e2:	08          	load
 6e3:	8c          	im 12
 6e4:	05          	add
 6e5:	08          	load
 6e6:	24          	lessthan
 6e7:	99          	im 25
 6e8:	38          	neqbranch
 6e9:	8c          	im 12
 6ea:	08          	load
 6eb:	8c          	im 12
 6ec:	05          	add
 6ed:	08          	load
 6ee:	10          	addsp 0
 6ef:	8c          	im 12
 6f0:	08          	load
 6f1:	8c          	im 12
 6f2:	05          	add
 6f3:	0c          	store
 6f4:	8c          	im 12
 6f5:	08          	load
 6f6:	fc          	im -4
 6f7:	05          	add
 6f8:	08          	load
 6f9:	10          	addsp 0
 6fa:	8c          	im 12
 6fb:	08          	load
 6fc:	fc          	im -4
 6fd:	05          	add
 6fe:	0c          	store
 6ff:	c9          	im -55
 700:	39          	poppcrel

00000701 <.L4>:
 701:	8c          	im 12
 702:	08          	load
 703:	fc          	im -4
 704:	05          	add
 705:	08          	load
 706:	80          	im 0
 707:	2e          	eq
 708:	80          	im 0
 709:	c9          	im -55
 70a:	38          	neqbranch
 70b:	8c          	im 12
 70c:	08          	load
 70d:	8c          	im 12
 70e:	05          	add
 70f:	08          	load
 710:	8c          	im 12
 711:	08          	load
 712:	88          	im 8
 713:	05          	add
 714:	08          	load
 715:	26          	ulessthan
 716:	a1          	im 33
 717:	38          	neqbranch
 718:	8c          	im 12
 719:	08          	load
 71a:	88          	im 8
 71b:	05          	add
 71c:	08          	load
 71d:	8c          	im 12
 71e:	08          	load
 71f:	8c          	im 12
 720:	05          	add
 721:	08          	load
 722:	31          	sub
 723:	8c          	im 12
 724:	08          	load
 725:	88          	im 8
 726:	05          	add
 727:	0c          	store
 728:	8c          	im 12
 729:	08          	load
 72a:	f8          	im -8
 72b:	05          	add
 72c:	08          	load
 72d:	8c          	im 12
 72e:	08          	load
 72f:	fc          	im -4
 730:	05          	add
 731:	08          	load
 732:	07          	or
 733:	8c          	im 12
 734:	08          	load
 735:	f8          	im -8
 736:	05          	add
 737:	0c          	store

00000738 <.L6>:
 738:	8c          	im 12
 739:	08          	load
 73a:	fc          	im -4
 73b:	05          	add
 73c:	08          	load
 73d:	81          	im 1
 73e:	2a          	lshiftright
 73f:	8c          	im 12
 740:	08          	load
 741:	fc          	im -4
 742:	05          	add
 743:	0c          	store
 744:	8c          	im 12
 745:	08          	load
 746:	8c          	im 12
 747:	05          	add
 748:	08          	load
 749:	81          	im 1
 74a:	2a          	lshiftright
 74b:	8c          	im 12
 74c:	08          	load
 74d:	8c          	im 12
 74e:	05          	add
 74f:	0c          	store
 750:	ff          	im -1
 751:	af          	im 47
 752:	39          	poppcrel

00000753 <.L5>:
 753:	8c          	im 12
 754:	08          	load
 755:	90          	im 16
 756:	05          	add
 757:	08          	load
 758:	80          	im 0
 759:	2e          	eq
 75a:	8f          	im 15
 75b:	38          	neqbranch
 75c:	8c          	im 12
 75d:	08          	load
 75e:	88          	im 8
 75f:	05          	add
 760:	08          	load
 761:	70          	loadsp 0
 762:	8c          	im 12
 763:	08          	load
 764:	f4          	im -12
 765:	05          	add
 766:	0c          	store
 767:	51          	storesp 4
 768:	8d          	im 13
 769:	39          	poppcrel

0000076a <.L7>:
 76a:	8c          	im 12
 76b:	08          	load
 76c:	f8          	im -8
 76d:	05          	add
 76e:	08          	load
 76f:	70          	loadsp 0
 770:	8c          	im 12
 771:	08          	load
 772:	f4          	im -12
 773:	05          	add
 774:	0c          	store
 775:	51          	storesp 4

00000776 <.L1>:
 776:	8c          	im 12
 777:	08          	load
 778:	f4          	im -12
 779:	05          	add
 77a:	08          	load
 77b:	80          	im 0
 77c:	0c          	store
 77d:	85          	im 5
 77e:	3d          	pushspadd
 77f:	0d          	popsp
 780:	8c          	im 12
 781:	0c          	store
 782:	04          	poppc

00000783 <_premain>:
 783:	fd          	im -3
 784:	3d          	pushspadd
 785:	0d          	popsp

00000786 <.LSM1>:
 786:	80          	im 0
 787:	0b          	nop
 788:	91          	im 17
 789:	bc          	im 60
 78a:	08          	load
 78b:	54          	storesp 16
 78c:	54          	storesp 16
 78d:	72          	loadsp 8
 78e:	81          	im 1
 78f:	2e          	eq
 790:	98          	im 24
 791:	38          	neqbranch
 792:	73          	loadsp 12
 793:	98          	im 24
 794:	f0          	im -16
 795:	0c          	store

00000796 <.LSM2>:
 796:	fa          	im -6
 797:	87          	im 7
 798:	3f          	callpcrel

00000799 <.LSM3>:
 799:	f8          	im -8
 79a:	e5          	im -27
 79b:	3f          	callpcrel

0000079c <.LSM4>:
 79c:	91          	im 17
 79d:	c8          	im -56
 79e:	52          	storesp 8
 79f:	81          	im 1
 7a0:	51          	storesp 4
 7a1:	fb          	im -5
 7a2:	be          	im 62
 7a3:	3f          	callpcrel

000007a4 <.LSM5>:
 7a4:	80          	im 0
 7a5:	08          	load
 7a6:	51          	storesp 4
 7a7:	9e          	im 30
 7a8:	3f          	callpcrel

000007a9 <.L6>:
 7a9:	72          	loadsp 8
 7aa:	98          	im 24
 7ab:	f0          	im -16
 7ac:	0c          	store

000007ad <.LSM7>:
 7ad:	f9          	im -7
 7ae:	f0          	im -16
 7af:	3f          	callpcrel

000007b0 <.LSM8>:
 7b0:	f8          	im -8
 7b1:	ce          	im -50
 7b2:	3f          	callpcrel

000007b3 <.LSM9>:
 7b3:	91          	im 17
 7b4:	c8          	im -56
 7b5:	52          	storesp 8
 7b6:	81          	im 1
 7b7:	51          	storesp 4
 7b8:	fb          	im -5
 7b9:	a7          	im 39
 7ba:	3f          	callpcrel

000007bb <.LSM10>:
 7bb:	80          	im 0
 7bc:	08          	load
 7bd:	51          	storesp 4
 7be:	87          	im 7
 7bf:	3f          	callpcrel

000007c0 <_exit>:
	...

000007c1 <.L8>:
 7c1:	ff          	im -1
 7c2:	39          	poppcrel

000007c3 <_zpu_interrupt>:
	...

000007c4 <.L12>:
 7c4:	ff          	im -1
 7c5:	39          	poppcrel

000007c6 <exit>:
 7c6:	f7          	im -9
 7c7:	3d          	pushspadd
 7c8:	0d          	popsp
 7c9:	7b          	loadsp 44

000007ca <.LM2>:
 7ca:	91          	im 17
 7cb:	cc          	im -52
 7cc:	08          	load
 7cd:	82          	im 2
 7ce:	c8          	im -56
 7cf:	11          	addsp 4
 7d0:	08          	load
 7d1:	5a          	storesp 40
 7d2:	54          	storesp 16
 7d3:	5a          	storesp 40

000007d4 <.LM3>:
 7d4:	77          	loadsp 28
 7d5:	80          	im 0
 7d6:	2e          	eq
 7d7:	80          	im 0
 7d8:	d9          	im -39
 7d9:	38          	neqbranch

000007da <.L12>:
 7da:	81          	im 1
 7db:	88          	im 8
 7dc:	18          	addsp 32

000007dd <.LM5>:
 7dd:	84          	im 4
 7de:	19          	addsp 36
 7df:	08          	load
 7e0:	ff          	im -1
 7e1:	05          	add
 7e2:	81          	im 1
 7e3:	71          	loadsp 4
 7e4:	2b          	ashiftleft
 7e5:	59          	storesp 36
 7e6:	55          	storesp 20
 7e7:	59          	storesp 36
 7e8:	80          	im 0
 7e9:	74          	loadsp 16
 7ea:	24          	lessthan
 7eb:	80          	im 0
 7ec:	e9          	im -23
 7ed:	38          	neqbranch

000007ee <.L5>:
 7ee:	80          	im 0
 7ef:	74          	loadsp 16
 7f0:	24          	lessthan
 7f1:	b5          	im 53
 7f2:	38          	neqbranch
 7f3:	73          	loadsp 12
 7f4:	82          	im 2
 7f5:	2b          	ashiftleft
 7f6:	78          	loadsp 32
 7f7:	11          	addsp 4
 7f8:	88          	im 8
 7f9:	05          	add
 7fa:	56          	storesp 24
 7fb:	56          	storesp 24

000007fc <.L11>:
 7fc:	81          	im 1
 7fd:	80          	im 0
 7fe:	19          	addsp 36
 7ff:	08          	load
 800:	77          	loadsp 28
 801:	06          	and
 802:	53          	storesp 12
 803:	72          	loadsp 8
 804:	80          	im 0
 805:	2e          	eq
 806:	b5          	im 53
 807:	38          	neqbranch

00000808 <.LM7>:
 808:	78          	loadsp 32
 809:	16          	addsp 24
 80a:	70          	loadsp 0
 80b:	08          	load
 80c:	53          	storesp 12
 80d:	53          	storesp 12
 80e:	79          	loadsp 36
 80f:	51          	storesp 4
 810:	74          	loadsp 16
 811:	08          	load
 812:	53          	storesp 12
 813:	72          	loadsp 8
 814:	2d          	call

00000815 <.LM8>:
 815:	ff          	im -1
 816:	14          	addsp 16
 817:	fc          	im -4
 818:	17          	addsp 28
 819:	fc          	im -4
 81a:	17          	addsp 28
 81b:	79          	loadsp 36
 81c:	81          	im 1
 81d:	2c          	ashiftright
 81e:	5a          	storesp 40
 81f:	57          	storesp 28
 820:	57          	storesp 28
 821:	54          	storesp 16
 822:	73          	loadsp 12
 823:	80          	im 0
 824:	25          	lessthanorequal
 825:	d6          	im -42
 826:	38          	neqbranch

00000827 <.L17>:
 827:	77          	loadsp 28
 828:	08          	load
 829:	58          	storesp 32
 82a:	77          	loadsp 28
 82b:	ff          	im -1
 82c:	ad          	im 45
 82d:	38          	neqbranch
 82e:	91          	im 17
 82f:	cc          	im -52
 830:	08          	load
 831:	53          	storesp 12

00000832 <.L15>:
 832:	bc          	im 60
 833:	13          	addsp 12
 834:	08          	load
 835:	a5          	im 37
 836:	38          	neqbranch

00000837 <.LM11>:
 837:	79          	loadsp 36
 838:	51          	storesp 4
 839:	ff          	im -1
 83a:	85          	im 5
 83b:	3f          	callpcrel

0000083c <.L9>:
 83c:	74          	loadsp 16
 83d:	08          	load
 83e:	53          	storesp 12
 83f:	72          	loadsp 8
 840:	2d          	call

00000841 <.LM13>:
 841:	ff          	im -1
 842:	14          	addsp 16
 843:	fc          	im -4
 844:	17          	addsp 28
 845:	fc          	im -4
 846:	17          	addsp 28
 847:	79          	loadsp 36
 848:	81          	im 1
 849:	2c          	ashiftright
 84a:	5a          	storesp 40
 84b:	57          	storesp 28
 84c:	57          	storesp 28
 84d:	54          	storesp 16
 84e:	73          	loadsp 12
 84f:	80          	im 0
 850:	25          	lessthanorequal
 851:	ff          	im -1
 852:	a9          	im 41
 853:	38          	neqbranch
 854:	d2          	im -46
 855:	39          	poppcrel

00000856 <.L19>:
 856:	80          	im 0
 857:	57          	storesp 28
 858:	ff          	im -1
 859:	94          	im 20
 85a:	39          	poppcrel

0000085b <.L20>:
 85b:	72          	loadsp 8
 85c:	51          	storesp 4
 85d:	bc          	im 60
 85e:	13          	addsp 12
 85f:	08          	load
 860:	53          	storesp 12
 861:	72          	loadsp 8
 862:	2d          	call

00000863 <.LM15>:
 863:	79          	loadsp 36
 864:	51          	storesp 4
 865:	fe          	im -2
 866:	d9          	im -39
 867:	3f          	callpcrel

00000868 <__do_global_ctors_aux>:
 868:	ff          	im -1
 869:	3d          	pushspadd
 86a:	0d          	popsp
 86b:	98          	im 24
 86c:	d0          	im -48
 86d:	0b          	nop
 86e:	fc          	im -4
 86f:	05          	add
 870:	70          	loadsp 0
 871:	08          	load
 872:	52          	storesp 8
 873:	52          	storesp 8
 874:	70          	loadsp 0
 875:	ff          	im -1
 876:	2e          	eq
 877:	91          	im 17
 878:	38          	neqbranch

00000879 <.L10>:
 879:	70          	loadsp 0
 87a:	2d          	call
 87b:	fc          	im -4
 87c:	12          	addsp 8
 87d:	70          	loadsp 0
 87e:	08          	load
 87f:	52          	storesp 8
 880:	52          	storesp 8
 881:	70          	loadsp 0
 882:	ff          	im -1
 883:	2e          	eq
 884:	09          	not
 885:	81          	im 1
 886:	06          	and
 887:	f1          	im -15
 888:	38          	neqbranch

00000889 <.L7>:
 889:	83          	im 3
 88a:	3d          	pushspadd
 88b:	0d          	popsp
 88c:	04          	poppc

0000088d <call___do_global_ctors_aux>:
 88d:	04          	poppc
Disassembly of section .fini:

0000088e <_fini>:
 88e:	f8          	im -8
 88f:	f1          	im -15
 890:	3f          	callpcrel
 891:	04          	poppc
Disassembly of section .rodata:

00000894 <_mask>:
 894:	00          	breakpoint
 895:	ff          	im -1
 896:	ff          	im -1
 897:	ff          	im -1
 898:	ff          	im -1
 899:	00          	breakpoint
 89a:	ff          	im -1
 89b:	ff          	im -1
 89c:	ff          	im -1
 89d:	ff          	im -1
 89e:	00          	breakpoint
 89f:	ff          	im -1
 8a0:	ff          	im -1
 8a1:	ff          	im -1
 8a2:	ff          	im -1
	...

000008a4 <mhz>:
 8a4:	00          	breakpoint
 8a5:	00          	breakpoint
 8a6:	00          	breakpoint
 8a7:	40          	storesp 64
 8a8:	64          	loadsp 80
 8a9:	75          	loadsp 20
 8aa:	6d          	loadsp 116
 8ab:	6d          	loadsp 116
 8ac:	79          	loadsp 36
 8ad:	2e          	eq
 8ae:	65          	loadsp 84
 8af:	78          	loadsp 32
 8b0:	65          	loadsp 84
 8b1:	00          	breakpoint
 8b2:	00          	breakpoint
 8b3:	00          	breakpoint
 8b4:	43          	storesp 76
	...
Disassembly of section .data:

000008b8 <__data_start>:
 8b8:	00          	breakpoint
 8b9:	00          	breakpoint
	...

000008bc <_cpu_config>:
 8bc:	00          	breakpoint
 8bd:	00          	breakpoint
	...

000008c0 <__dso_handle>:
 8c0:	00          	breakpoint
 8c1:	00          	breakpoint
	...

000008c4 <p.0>:
 8c4:	00          	breakpoint
 8c5:	00          	breakpoint
 8c6:	0c          	store
 8c7:	58          	storesp 32

000008c8 <args>:
 8c8:	00          	breakpoint
 8c9:	00          	breakpoint
 8ca:	08          	load
 8cb:	a8          	im 40

000008cc <_impure_ptr>:
 8cc:	00          	breakpoint
 8cd:	00          	breakpoint
 8ce:	08          	load
 8cf:	d0          	im -48

000008d0 <impure_data>:
 8d0:	00          	breakpoint
 8d1:	00          	breakpoint
 8d2:	00          	breakpoint
 8d3:	00          	breakpoint
 8d4:	00          	breakpoint
 8d5:	00          	breakpoint
 8d6:	0b          	nop
 8d7:	38          	neqbranch
 8d8:	00          	breakpoint
 8d9:	00          	breakpoint
 8da:	0b          	nop
 8db:	94          	im 20
 8dc:	00          	breakpoint
 8dd:	00          	breakpoint
 8de:	0b          	nop
 8df:	f0          	im -16
	...
 904:	00          	breakpoint
 905:	00          	breakpoint
 906:	08          	load
 907:	b4          	im 52
	...
 978:	00          	breakpoint
 979:	00          	breakpoint
 97a:	00          	breakpoint
 97b:	01          	.byte 1
 97c:	33          	loadb
 97d:	0e          	.byte 14
 97e:	ab          	im 43
 97f:	cd          	im -51
 980:	12          	addsp 8
 981:	34          	storeb
 982:	e6          	im -26
 983:	6d          	loadsp 116
 984:	de          	im -34
 985:	ec          	im -20
 986:	00          	breakpoint
 987:	05          	add
 988:	00          	breakpoint
 989:	0b          	nop
	...
Disassembly of section .ctors:

00000c4c <___ctors>:
 c4c:	ff          	im -1
 c4d:	ff          	im -1
 c4e:	ff          	im -1
 c4f:	ff          	im -1

00000c50 <__CTOR_END__>:
 c50:	00          	breakpoint
 c51:	00          	breakpoint
	...
Disassembly of section .dtors:

00000c54 <___dtors>:
 c54:	ff          	im -1
 c55:	ff          	im -1
 c56:	ff          	im -1
 c57:	ff          	im -1

00000c58 <__DTOR_END__>:
 c58:	00          	breakpoint
 c59:	00          	breakpoint
	...
Disassembly of section .jcr:

00000c5c <__JCR_END__>:
 c5c:	00          	breakpoint
 c5d:	00          	breakpoint
	...
Disassembly of section .bss:

00000c60 <UART>:
 c60:	00          	breakpoint
 c61:	00          	breakpoint
	...

00000c64 <TIMER>:
 c64:	00          	breakpoint
 c65:	00          	breakpoint
	...

00000c68 <MHZ>:
 c68:	00          	breakpoint
 c69:	00          	breakpoint
	...

00000c6c <completed.1>:
 c6c:	00          	breakpoint
 c6d:	00          	breakpoint
	...

00000c70 <_use_syscall>:
 c70:	00          	breakpoint
 c71:	00          	breakpoint
	...
Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00          	breakpoint
   1:	00          	breakpoint
   2:	00          	breakpoint
   3:	3c          	syscall
   4:	00          	breakpoint
   5:	02          	pushsp
   6:	00          	breakpoint
   7:	00          	breakpoint
   8:	00          	breakpoint
   9:	00          	breakpoint
   a:	04          	poppc
	...
  1f:	2d          	call
  20:	00          	breakpoint
  21:	00          	breakpoint
  22:	00          	breakpoint
  23:	00          	breakpoint
  24:	00          	breakpoint
  25:	00          	breakpoint
  26:	00          	breakpoint
  27:	25          	lessthanorequal
  28:	00          	breakpoint
  29:	00          	breakpoint
  2a:	04          	poppc
  2b:	9f          	im 31
  2c:	00          	breakpoint
  2d:	00          	breakpoint
  2e:	00          	breakpoint
  2f:	85          	im 5
  30:	00          	breakpoint
  31:	00          	breakpoint
  32:	00          	breakpoint
  33:	00          	breakpoint
  34:	00          	breakpoint
  35:	00          	breakpoint
  36:	00          	breakpoint
  37:	70          	loadsp 0
	...
Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
   0:	00          	breakpoint
   1:	00          	breakpoint
   2:	00          	breakpoint
   3:	49          	storesp 100
   4:	00          	breakpoint
   5:	02          	pushsp
   6:	00          	breakpoint
   7:	00          	breakpoint
   8:	00          	breakpoint
   9:	00          	breakpoint
   a:	00          	breakpoint
   b:	00          	breakpoint
   c:	01          	.byte 1
   d:	75          	loadsp 20
   e:	00          	breakpoint
   f:	00          	breakpoint
  10:	00          	breakpoint
  11:	6a          	loadsp 104
  12:	69          	loadsp 100
  13:	6e          	loadsp 120
  14:	62          	loadsp 72
  15:	79          	loadsp 36
  16:	74          	loadsp 16
  17:	65          	loadsp 84
  18:	00          	breakpoint
  19:	00          	breakpoint
  1a:	00          	breakpoint
  1b:	00          	breakpoint
  1c:	93          	im 19
  1d:	6f          	loadsp 124
  1e:	75          	loadsp 20
  1f:	74          	loadsp 16
  20:	62          	loadsp 72
  21:	79          	loadsp 36
  22:	74          	loadsp 16
  23:	65          	loadsp 84
  24:	00          	breakpoint
  25:	00          	breakpoint
  26:	00          	breakpoint
  27:	00          	breakpoint
  28:	b8          	im 56
  29:	5f          	storesp 60
  2a:	69          	loadsp 100
  2b:	6e          	loadsp 120
  2c:	69          	loadsp 100
  2d:	74          	loadsp 16
  2e:	49          	storesp 100
  2f:	4f          	storesp 124
  30:	00          	breakpoint
  31:	00          	breakpoint
  32:	00          	breakpoint
  33:	00          	breakpoint
  34:	cc          	im -52
  35:	5f          	storesp 60
  36:	72          	loadsp 8
  37:	65          	loadsp 84
  38:	61          	loadsp 68
  39:	64          	loadsp 80
  3a:	43          	storesp 76
  3b:	79          	loadsp 36
  3c:	63          	loadsp 76
  3d:	6c          	loadsp 112
  3e:	65          	loadsp 84
  3f:	73          	loadsp 12
  40:	00          	breakpoint
  41:	00          	breakpoint
  42:	00          	breakpoint
  43:	01          	.byte 1
  44:	4c          	storesp 112
  45:	4d          	storesp 116
  46:	48          	storesp 96
  47:	5a          	storesp 40
  48:	00          	breakpoint
  49:	00          	breakpoint
  4a:	00          	breakpoint
	...
Disassembly of section .debug_info:

00000000 <.Ldebug_info0>:
   0:	00          	breakpoint
   1:	00          	breakpoint
   2:	01          	.byte 1
   3:	71          	loadsp 4
   4:	00          	breakpoint
   5:	02          	pushsp
   6:	00          	breakpoint
   7:	00          	breakpoint
   8:	00          	breakpoint
   9:	00          	breakpoint
   a:	04          	poppc
   b:	01          	.byte 1
   c:	00          	breakpoint
   d:	00          	breakpoint
   e:	00          	breakpoint
   f:	00          	breakpoint
  10:	00          	breakpoint
  11:	00          	breakpoint
  12:	00          	breakpoint
  13:	ad          	im 45
  14:	01          	.byte 1
  15:	00          	breakpoint
  16:	00          	breakpoint
  17:	00          	breakpoint
  18:	c3          	im -61
  19:	00          	breakpoint
  1a:	00          	breakpoint
  1b:	00          	breakpoint
  1c:	23          	storeh
  1d:	02          	pushsp
  1e:	00          	breakpoint
  1f:	00          	breakpoint
  20:	00          	breakpoint
  21:	11          	addsp 4
  22:	04          	poppc
  23:	07          	or
  24:	02          	pushsp
  25:	00          	breakpoint
  26:	00          	breakpoint
  27:	00          	breakpoint
  28:	77          	loadsp 28
  29:	04          	poppc
  2a:	05          	add
  2b:	02          	pushsp
  2c:	00          	breakpoint
  2d:	00          	breakpoint
  2e:	00          	breakpoint
  2f:	72          	loadsp 8
  30:	08          	load
  31:	05          	add
  32:	03          	.byte 3
  33:	69          	loadsp 100
  34:	6e          	loadsp 120
  35:	74          	loadsp 16
  36:	00          	breakpoint
  37:	04          	poppc
  38:	05          	add
  39:	02          	pushsp
  3a:	00          	breakpoint
  3b:	00          	breakpoint
  3c:	00          	breakpoint
  3d:	16          	addsp 24
  3e:	04          	poppc
  3f:	07          	or
  40:	02          	pushsp
  41:	00          	breakpoint
  42:	00          	breakpoint
  43:	00          	breakpoint
  44:	11          	addsp 4
  45:	04          	poppc
  46:	07          	or
  47:	02          	pushsp
  48:	00          	breakpoint
  49:	00          	breakpoint
  4a:	00          	breakpoint
  4b:	e9          	im -23
  4c:	01          	.byte 1
  4d:	08          	load
  4e:	02          	pushsp
  4f:	00          	breakpoint
  50:	00          	breakpoint
  51:	00          	breakpoint
  52:	f7          	im -9
  53:	02          	pushsp
  54:	05          	add
  55:	02          	pushsp
  56:	00          	breakpoint
  57:	00          	breakpoint
  58:	00          	breakpoint
  59:	f2          	im -14
  5a:	01          	.byte 1
  5b:	08          	load
  5c:	02          	pushsp
  5d:	00          	breakpoint
  5e:	00          	breakpoint
  5f:	00          	breakpoint
  60:	9a          	im 26
  61:	02          	pushsp
  62:	07          	or
  63:	02          	pushsp
  64:	00          	breakpoint
  65:	00          	breakpoint
  66:	00          	breakpoint
  67:	0c          	store
  68:	08          	load
  69:	07          	or
  6a:	04          	poppc
  6b:	00          	breakpoint
  6c:	00          	breakpoint
  6d:	00          	breakpoint
  6e:	93          	im 19
  6f:	01          	.byte 1
  70:	00          	breakpoint
  71:	00          	breakpoint
  72:	01          	.byte 1
  73:	01          	.byte 1
  74:	0b          	nop
  75:	18          	addsp 32
  76:	00          	breakpoint
  77:	00          	breakpoint
  78:	00          	breakpoint
  79:	32          	xor
	...
  82:	02          	pushsp
  83:	90          	im 16
  84:	20          	.byte 32
  85:	05          	add
  86:	76          	loadsp 24
  87:	61          	loadsp 68
  88:	6c          	loadsp 112
  89:	00          	breakpoint
  8a:	0b          	nop
  8b:	19          	addsp 36
  8c:	00          	breakpoint
  8d:	00          	breakpoint
  8e:	00          	breakpoint
  8f:	32          	xor
  90:	01          	.byte 1
  91:	59          	storesp 36
  92:	00          	breakpoint
  93:	06          	and
  94:	00          	breakpoint
  95:	00          	breakpoint
  96:	00          	breakpoint
  97:	b8          	im 56
  98:	01          	.byte 1
  99:	00          	breakpoint
  9a:	00          	breakpoint
  9b:	00          	breakpoint
  9c:	86          	im 6
  9d:	0b          	nop
  9e:	2c          	ashiftright
  9f:	01          	.byte 1
	...
  a8:	02          	pushsp
  a9:	90          	im 16
  aa:	20          	.byte 32
  ab:	07          	or
  ac:	63          	loadsp 76
  ad:	00          	breakpoint
  ae:	0b          	nop
  af:	2b          	ashiftleft
  b0:	00          	breakpoint
  b1:	00          	breakpoint
  b2:	00          	breakpoint
  b3:	32          	xor
  b4:	02          	pushsp
  b5:	91          	im 17
  b6:	0c          	store
  b7:	00          	breakpoint
  b8:	08          	load
  b9:	01          	.byte 1
  ba:	00          	breakpoint
  bb:	00          	breakpoint
  bc:	01          	.byte 1
  bd:	0d          	popsp
  be:	0b          	nop
  bf:	35          	div
  c0:	01          	.byte 1
  c1:	00          	breakpoint
  c2:	00          	breakpoint
  c3:	04          	poppc
  c4:	9f          	im 31
  c5:	00          	breakpoint
  c6:	00          	breakpoint
  c7:	05          	add
  c8:	01          	.byte 1
  c9:	02          	pushsp
  ca:	90          	im 16
  cb:	20          	.byte 32
  cc:	04          	poppc
  cd:	00          	breakpoint
  ce:	00          	breakpoint
  cf:	01          	.byte 1
  d0:	05          	add
  d1:	01          	.byte 1
  d2:	00          	breakpoint
  d3:	00          	breakpoint
  d4:	00          	breakpoint
  d5:	8e          	im 14
  d6:	0b          	nop
  d7:	50          	storesp 0
  d8:	00          	breakpoint
  d9:	00          	breakpoint
  da:	00          	breakpoint
  db:	2b          	ashiftleft
	...
  e4:	02          	pushsp
  e5:	90          	im 16
  e6:	20          	.byte 32
  e7:	09          	not
  e8:	00          	breakpoint
  e9:	00          	breakpoint
  ea:	01          	.byte 1
  eb:	15          	addsp 20
  ec:	0b          	nop
  ed:	51          	storesp 4
  ee:	00          	breakpoint
  ef:	00          	breakpoint
  f0:	00          	breakpoint
  f1:	2b          	ashiftleft
  f2:	06          	and
  f3:	5c          	storesp 48
  f4:	93          	im 19
  f5:	04          	poppc
  f6:	5d          	storesp 52
  f7:	93          	im 19
  f8:	04          	poppc
  f9:	05          	add
  fa:	69          	loadsp 100
  fb:	00          	breakpoint
  fc:	0b          	nop
  fd:	52          	storesp 8
  fe:	00          	breakpoint
  ff:	00          	breakpoint
 100:	00          	breakpoint
 101:	39          	poppcrel
 102:	01          	.byte 1
 103:	5e          	storesp 56
 104:	00          	breakpoint
 105:	0a          	flip
 106:	00          	breakpoint
 107:	00          	breakpoint
 108:	00          	breakpoint
 109:	b9          	im 57
 10a:	0b          	nop
 10b:	06          	and
 10c:	00          	breakpoint
 10d:	00          	breakpoint
 10e:	00          	breakpoint
 10f:	32          	xor
 110:	01          	.byte 1
 111:	01          	.byte 1
 112:	0a          	flip
 113:	00          	breakpoint
 114:	00          	breakpoint
 115:	00          	breakpoint
 116:	00          	breakpoint
 117:	0b          	nop
 118:	0b          	nop
 119:	00          	breakpoint
 11a:	00          	breakpoint
 11b:	00          	breakpoint
 11c:	32          	xor
 11d:	01          	.byte 1
 11e:	01          	.byte 1
 11f:	09          	not
 120:	00          	breakpoint
 121:	00          	breakpoint
 122:	01          	.byte 1
 123:	08          	load
 124:	0b          	nop
 125:	0c          	store
 126:	00          	breakpoint
 127:	00          	breakpoint
 128:	01          	.byte 1
 129:	30          	neg
 12a:	05          	add
 12b:	03          	.byte 3
 12c:	00          	breakpoint
 12d:	00          	breakpoint
 12e:	0c          	store
 12f:	60          	loadsp 64
 130:	0b          	nop
 131:	04          	poppc
 132:	00          	breakpoint
 133:	00          	breakpoint
 134:	01          	.byte 1
 135:	36          	mod
 136:	0c          	store
 137:	00          	breakpoint
 138:	00          	breakpoint
 139:	00          	breakpoint
 13a:	32          	xor
 13b:	09          	not
 13c:	00          	breakpoint
 13d:	00          	breakpoint
 13e:	00          	breakpoint
 13f:	80          	im 0
 140:	0b          	nop
 141:	0d          	popsp
 142:	00          	breakpoint
 143:	00          	breakpoint
 144:	01          	.byte 1
 145:	30          	neg
 146:	05          	add
 147:	03          	.byte 3
 148:	00          	breakpoint
 149:	00          	breakpoint
 14a:	0c          	store
 14b:	64          	loadsp 80
 14c:	0d          	popsp
 14d:	4d          	storesp 116
 14e:	48          	storesp 96
 14f:	5a          	storesp 40
 150:	00          	breakpoint
 151:	0b          	nop
 152:	0e          	.byte 14
 153:	00          	breakpoint
 154:	00          	breakpoint
 155:	01          	.byte 1
 156:	30          	neg
 157:	01          	.byte 1
 158:	05          	add
 159:	03          	.byte 3
 15a:	00          	breakpoint
 15b:	00          	breakpoint
 15c:	0c          	store
 15d:	68          	loadsp 96
 15e:	05          	add
 15f:	6d          	loadsp 116
 160:	68          	loadsp 96
 161:	7a          	loadsp 40
 162:	00          	breakpoint
 163:	0b          	nop
 164:	32          	xor
 165:	00          	breakpoint
 166:	00          	breakpoint
 167:	01          	.byte 1
 168:	6f          	loadsp 124
 169:	05          	add
 16a:	03          	.byte 3
 16b:	00          	breakpoint
 16c:	00          	breakpoint
 16d:	08          	load
 16e:	a4          	im 36
 16f:	0e          	.byte 14
 170:	00          	breakpoint
 171:	00          	breakpoint
 172:	00          	breakpoint
 173:	32          	xor
	...
Disassembly of section .debug_abbrev:

00000000 <.Ldebug_abbrev0>:
   0:	01          	.byte 1
   1:	11          	addsp 4
   2:	01          	.byte 1
   3:	10          	addsp 0
   4:	06          	and
   5:	25          	lessthanorequal
   6:	0e          	.byte 14
   7:	13          	addsp 12
   8:	0b          	nop
   9:	03          	.byte 3
   a:	0e          	.byte 14
   b:	1b          	addsp 44
   c:	0e          	.byte 14
   d:	00          	breakpoint
   e:	00          	breakpoint
   f:	02          	pushsp
  10:	24          	lessthan
  11:	00          	breakpoint
  12:	03          	.byte 3
  13:	0e          	.byte 14
  14:	0b          	nop
  15:	0b          	nop
  16:	3e          	halfmult
  17:	0b          	nop
  18:	00          	breakpoint
  19:	00          	breakpoint
  1a:	03          	.byte 3
  1b:	24          	lessthan
  1c:	00          	breakpoint
  1d:	03          	.byte 3
  1e:	08          	load
  1f:	0b          	nop
  20:	0b          	nop
  21:	3e          	halfmult
  22:	0b          	nop
  23:	00          	breakpoint
  24:	00          	breakpoint
  25:	04          	poppc
  26:	2e          	eq
  27:	01          	.byte 1
  28:	01          	.byte 1
  29:	13          	addsp 12
  2a:	3f          	callpcrel
  2b:	0c          	store
  2c:	03          	.byte 3
  2d:	0e          	.byte 14
  2e:	3a          	config
  2f:	0b          	nop
  30:	3b          	pushpc
  31:	0b          	nop
  32:	49          	storesp 100
  33:	13          	addsp 12
  34:	11          	addsp 4
  35:	01          	.byte 1
  36:	12          	addsp 8
  37:	01          	.byte 1
  38:	40          	storesp 64
  39:	0a          	flip
  3a:	00          	breakpoint
  3b:	00          	breakpoint
  3c:	05          	add
  3d:	34          	storeb
  3e:	00          	breakpoint
  3f:	03          	.byte 3
  40:	08          	load
  41:	3a          	config
  42:	0b          	nop
  43:	3b          	pushpc
  44:	0b          	nop
  45:	49          	storesp 100
  46:	13          	addsp 12
  47:	02          	pushsp
  48:	0a          	flip
  49:	00          	breakpoint
  4a:	00          	breakpoint
  4b:	06          	and
  4c:	2e          	eq
  4d:	01          	.byte 1
  4e:	01          	.byte 1
  4f:	13          	addsp 12
  50:	3f          	callpcrel
  51:	0c          	store
  52:	03          	.byte 3
  53:	0e          	.byte 14
  54:	3a          	config
  55:	0b          	nop
  56:	3b          	pushpc
  57:	0b          	nop
  58:	27          	ulessthanorequal
  59:	0c          	store
  5a:	11          	addsp 4
  5b:	01          	.byte 1
  5c:	12          	addsp 8
  5d:	01          	.byte 1
  5e:	40          	storesp 64
  5f:	0a          	flip
  60:	00          	breakpoint
  61:	00          	breakpoint
  62:	07          	or
  63:	05          	add
  64:	00          	breakpoint
  65:	03          	.byte 3
  66:	08          	load
  67:	3a          	config
  68:	0b          	nop
  69:	3b          	pushpc
  6a:	0b          	nop
  6b:	49          	storesp 100
  6c:	13          	addsp 12
  6d:	02          	pushsp
  6e:	0a          	flip
  6f:	00          	breakpoint
  70:	00          	breakpoint
  71:	08          	load
  72:	2e          	eq
  73:	00          	breakpoint
  74:	3f          	callpcrel
  75:	0c          	store
  76:	03          	.byte 3
  77:	0e          	.byte 14
  78:	3a          	config
  79:	0b          	nop
  7a:	3b          	pushpc
  7b:	0b          	nop
  7c:	27          	ulessthanorequal
  7d:	0c          	store
  7e:	11          	addsp 4
  7f:	01          	.byte 1
  80:	12          	addsp 8
  81:	01          	.byte 1
  82:	40          	storesp 64
  83:	0a          	flip
  84:	00          	breakpoint
  85:	00          	breakpoint
  86:	09          	not
  87:	34          	storeb
  88:	00          	breakpoint
  89:	03          	.byte 3
  8a:	0e          	.byte 14
  8b:	3a          	config
  8c:	0b          	nop
  8d:	3b          	pushpc
  8e:	0b          	nop
  8f:	49          	storesp 100
  90:	13          	addsp 12
  91:	02          	pushsp
  92:	0a          	flip
  93:	00          	breakpoint
  94:	00          	breakpoint
  95:	0a          	flip
  96:	34          	storeb
  97:	00          	breakpoint
  98:	03          	.byte 3
  99:	0e          	.byte 14
  9a:	3a          	config
  9b:	0b          	nop
  9c:	3b          	pushpc
  9d:	0b          	nop
  9e:	49          	storesp 100
  9f:	13          	addsp 12
  a0:	3f          	callpcrel
  a1:	0c          	store
  a2:	3c          	syscall
  a3:	0c          	store
  a4:	00          	breakpoint
  a5:	00          	breakpoint
  a6:	0b          	nop
  a7:	0f          	.byte 15
  a8:	00          	breakpoint
  a9:	0b          	nop
  aa:	0b          	nop
  ab:	49          	storesp 100
  ac:	13          	addsp 12
  ad:	00          	breakpoint
  ae:	00          	breakpoint
  af:	0c          	store
  b0:	35          	div
  b1:	00          	breakpoint
  b2:	49          	storesp 100
  b3:	13          	addsp 12
  b4:	00          	breakpoint
  b5:	00          	breakpoint
  b6:	0d          	popsp
  b7:	34          	storeb
  b8:	00          	breakpoint
  b9:	03          	.byte 3
  ba:	08          	load
  bb:	3a          	config
  bc:	0b          	nop
  bd:	3b          	pushpc
  be:	0b          	nop
  bf:	49          	storesp 100
  c0:	13          	addsp 12
  c1:	3f          	callpcrel
  c2:	0c          	store
  c3:	02          	pushsp
  c4:	0a          	flip
  c5:	00          	breakpoint
  c6:	00          	breakpoint
  c7:	0e          	.byte 14
  c8:	26          	ulessthan
  c9:	00          	breakpoint
  ca:	49          	storesp 100
  cb:	13          	addsp 12
  cc:	00          	breakpoint
	...
Disassembly of section .debug_line:

00000000 <.Ldebug_line0>:
   0:	00          	breakpoint
   1:	00          	breakpoint
   2:	02          	pushsp
   3:	89          	im 9
   4:	00          	breakpoint
   5:	02          	pushsp
   6:	00          	breakpoint
   7:	00          	breakpoint
   8:	01          	.byte 1
   9:	4f          	storesp 124
   a:	01          	.byte 1
   b:	01          	.byte 1
   c:	f6          	im -10
   d:	f5          	im -11
   e:	0a          	flip
   f:	00          	breakpoint
  10:	01          	.byte 1
  11:	01          	.byte 1
  12:	01          	.byte 1
  13:	01          	.byte 1
  14:	00          	breakpoint
  15:	00          	breakpoint
  16:	00          	breakpoint
  17:	01          	.byte 1
  18:	2e          	eq
  19:	2e          	eq
  1a:	2f          	neq
  1b:	2e          	eq
  1c:	2e          	eq
  1d:	2f          	neq
  1e:	2e          	eq
  1f:	2e          	eq
  20:	2f          	neq
  21:	2e          	eq
  22:	2e          	eq
  23:	2f          	neq
  24:	67          	loadsp 92
  25:	63          	loadsp 76
  26:	63          	loadsp 76
  27:	2f          	neq
  28:	6c          	loadsp 112
  29:	69          	loadsp 100
  2a:	62          	loadsp 72
  2b:	67          	loadsp 92
  2c:	6c          	loadsp 112
  2d:	6f          	loadsp 124
  2e:	73          	loadsp 12
  2f:	73          	loadsp 12
  30:	2f          	neq
  31:	7a          	loadsp 40
  32:	70          	loadsp 0
  33:	75          	loadsp 20
  34:	00          	breakpoint
  35:	2f          	neq
  36:	68          	loadsp 96
  37:	6f          	loadsp 124
  38:	6d          	loadsp 116
  39:	65          	loadsp 84
  3a:	2f          	neq
  3b:	61          	loadsp 68
  3c:	6c          	loadsp 112
  3d:	76          	loadsp 24
  3e:	69          	loadsp 100
  3f:	65          	loadsp 84
  40:	62          	loadsp 72
  41:	6f          	loadsp 124
  42:	79          	loadsp 36
  43:	2f          	neq
  44:	7a          	loadsp 40
  45:	70          	loadsp 0
  46:	75          	loadsp 20
  47:	2f          	neq
  48:	74          	loadsp 16
  49:	6f          	loadsp 124
  4a:	6f          	loadsp 124
  4b:	6c          	loadsp 112
  4c:	63          	loadsp 76
  4d:	68          	loadsp 96
  4e:	61          	loadsp 68
  4f:	69          	loadsp 100
  50:	6e          	loadsp 120
  51:	2f          	neq
  52:	74          	loadsp 16
  53:	6f          	loadsp 124
  54:	6f          	loadsp 124
  55:	6c          	loadsp 112
  56:	63          	loadsp 76
  57:	68          	loadsp 96
  58:	61          	loadsp 68
  59:	69          	loadsp 100
  5a:	6e          	loadsp 120
  5b:	2f          	neq
  5c:	74          	loadsp 16
  5d:	6f          	loadsp 124
  5e:	6f          	loadsp 124
  5f:	6c          	loadsp 112
  60:	63          	loadsp 76
  61:	68          	loadsp 96
  62:	61          	loadsp 68
  63:	69          	loadsp 100
  64:	6e          	loadsp 120
  65:	2f          	neq
  66:	67          	loadsp 92
  67:	63          	loadsp 76
  68:	63          	loadsp 76
  69:	2f          	neq
  6a:	6e          	loadsp 120
  6b:	65          	loadsp 84
  6c:	77          	loadsp 28
  6d:	6c          	loadsp 112
  6e:	69          	loadsp 100
  6f:	62          	loadsp 72
  70:	2f          	neq
  71:	6c          	loadsp 112
  72:	69          	loadsp 100
  73:	62          	loadsp 72
  74:	63          	loadsp 76
  75:	2f          	neq
  76:	69          	loadsp 100
  77:	6e          	loadsp 120
  78:	63          	loadsp 76
  79:	6c          	loadsp 112
  7a:	75          	loadsp 20
  7b:	64          	loadsp 80
  7c:	65          	loadsp 84
  7d:	00          	breakpoint
  7e:	2f          	neq
  7f:	68          	loadsp 96
  80:	6f          	loadsp 124
  81:	6d          	loadsp 116
  82:	65          	loadsp 84
  83:	2f          	neq
  84:	61          	loadsp 68
  85:	6c          	loadsp 112
  86:	76          	loadsp 24
  87:	69          	loadsp 100
  88:	65          	loadsp 84
  89:	62          	loadsp 72
  8a:	6f          	loadsp 124
  8b:	79          	loadsp 36
  8c:	2f          	neq
  8d:	7a          	loadsp 40
  8e:	70          	loadsp 0
  8f:	75          	loadsp 20
  90:	2f          	neq
  91:	74          	loadsp 16
  92:	6f          	loadsp 124
  93:	6f          	loadsp 124
  94:	6c          	loadsp 112
  95:	63          	loadsp 76
  96:	68          	loadsp 96
  97:	61          	loadsp 68
  98:	69          	loadsp 100
  99:	6e          	loadsp 120
  9a:	2f          	neq
  9b:	74          	loadsp 16
  9c:	6f          	loadsp 124
  9d:	6f          	loadsp 124
  9e:	6c          	loadsp 112
  9f:	63          	loadsp 76
  a0:	68          	loadsp 96
  a1:	61          	loadsp 68
  a2:	69          	loadsp 100
  a3:	6e          	loadsp 120
  a4:	2f          	neq
  a5:	74          	loadsp 16
  a6:	6f          	loadsp 124
  a7:	6f          	loadsp 124
  a8:	6c          	loadsp 112
  a9:	63          	loadsp 76
  aa:	68          	loadsp 96
  ab:	61          	loadsp 68
  ac:	69          	loadsp 100
  ad:	6e          	loadsp 120
  ae:	2f          	neq
  af:	67          	loadsp 92
  b0:	63          	loadsp 76
  b1:	63          	loadsp 76
  b2:	62          	loadsp 72
  b3:	75          	loadsp 20
  b4:	69          	loadsp 100
  b5:	6c          	loadsp 112
  b6:	64          	loadsp 80
  b7:	2f          	neq
  b8:	67          	loadsp 92
  b9:	63          	loadsp 76
  ba:	63          	loadsp 76
  bb:	2f          	neq
  bc:	69          	loadsp 100
  bd:	6e          	loadsp 120
  be:	63          	loadsp 76
  bf:	6c          	loadsp 112
  c0:	75          	loadsp 20
  c1:	64          	loadsp 80
  c2:	65          	loadsp 84
  c3:	00          	breakpoint
  c4:	00          	breakpoint
  c5:	73          	loadsp 12
  c6:	74          	loadsp 16
  c7:	64          	loadsp 80
  c8:	64          	loadsp 80
  c9:	65          	loadsp 84
  ca:	66          	loadsp 88
  cb:	2e          	eq
  cc:	68          	loadsp 96
  cd:	00          	breakpoint
  ce:	03          	.byte 3
  cf:	00          	breakpoint
  d0:	00          	breakpoint
  d1:	73          	loadsp 12
  d2:	74          	loadsp 16
  d3:	64          	loadsp 80
  d4:	61          	loadsp 68
  d5:	72          	loadsp 8
  d6:	67          	loadsp 92
  d7:	2e          	eq
  d8:	68          	loadsp 96
  d9:	00          	breakpoint
  da:	03          	.byte 3
  db:	00          	breakpoint
  dc:	00          	breakpoint
  dd:	73          	loadsp 12
  de:	79          	loadsp 36
  df:	73          	loadsp 12
  e0:	2f          	neq
  e1:	5f          	storesp 60
  e2:	74          	loadsp 16
  e3:	79          	loadsp 36
  e4:	70          	loadsp 0
  e5:	65          	loadsp 84
  e6:	73          	loadsp 12
  e7:	2e          	eq
  e8:	68          	loadsp 96
  e9:	00          	breakpoint
  ea:	02          	pushsp
  eb:	00          	breakpoint
  ec:	00          	breakpoint
  ed:	73          	loadsp 12
  ee:	79          	loadsp 36
  ef:	73          	loadsp 12
  f0:	2f          	neq
  f1:	72          	loadsp 8
  f2:	65          	loadsp 84
  f3:	65          	loadsp 84
  f4:	6e          	loadsp 120
  f5:	74          	loadsp 16
  f6:	2e          	eq
  f7:	68          	loadsp 96
  f8:	00          	breakpoint
  f9:	02          	pushsp
  fa:	00          	breakpoint
  fb:	00          	breakpoint
  fc:	73          	loadsp 12
  fd:	79          	loadsp 36
  fe:	73          	loadsp 12
  ff:	2f          	neq
 100:	74          	loadsp 16
 101:	79          	loadsp 36
 102:	70          	loadsp 0
 103:	65          	loadsp 84
 104:	73          	loadsp 12
 105:	2e          	eq
 106:	68          	loadsp 96
 107:	00          	breakpoint
 108:	02          	pushsp
 109:	00          	breakpoint
 10a:	00          	breakpoint
 10b:	6d          	loadsp 116
 10c:	61          	loadsp 68
 10d:	63          	loadsp 76
 10e:	68          	loadsp 96
 10f:	69          	loadsp 100
 110:	6e          	loadsp 120
 111:	65          	loadsp 84
 112:	2f          	neq
 113:	74          	loadsp 16
 114:	79          	loadsp 36
 115:	70          	loadsp 0
 116:	65          	loadsp 84
 117:	73          	loadsp 12
 118:	2e          	eq
 119:	68          	loadsp 96
 11a:	00          	breakpoint
 11b:	02          	pushsp
 11c:	00          	breakpoint
 11d:	00          	breakpoint
 11e:	73          	loadsp 12
 11f:	74          	loadsp 16
 120:	64          	loadsp 80
 121:	69          	loadsp 100
 122:	6f          	loadsp 124
 123:	2e          	eq
 124:	68          	loadsp 96
 125:	00          	breakpoint
 126:	02          	pushsp
 127:	00          	breakpoint
 128:	00          	breakpoint
 129:	65          	loadsp 84
 12a:	72          	loadsp 8
 12b:	72          	loadsp 8
 12c:	6e          	loadsp 120
 12d:	6f          	loadsp 124
 12e:	2e          	eq
 12f:	68          	loadsp 96
 130:	00          	breakpoint
 131:	02          	pushsp
 132:	00          	breakpoint
 133:	00          	breakpoint
 134:	74          	loadsp 16
 135:	69          	loadsp 100
 136:	6d          	loadsp 116
 137:	65          	loadsp 84
 138:	2e          	eq
 139:	68          	loadsp 96
 13a:	00          	breakpoint
 13b:	02          	pushsp
 13c:	00          	breakpoint
 13d:	00          	breakpoint
 13e:	73          	loadsp 12
 13f:	79          	loadsp 36
 140:	73          	loadsp 12
 141:	2f          	neq
 142:	73          	loadsp 12
 143:	74          	loadsp 16
 144:	61          	loadsp 68
 145:	74          	loadsp 16
 146:	2e          	eq
 147:	68          	loadsp 96
 148:	00          	breakpoint
 149:	02          	pushsp
 14a:	00          	breakpoint
 14b:	00          	breakpoint
 14c:	63          	loadsp 76
 14d:	72          	loadsp 8
 14e:	74          	loadsp 16
 14f:	5f          	storesp 60
 150:	69          	loadsp 100
 151:	6f          	loadsp 124
 152:	2e          	eq
 153:	63          	loadsp 76
 154:	00          	breakpoint
 155:	01          	.byte 1
 156:	00          	breakpoint
 157:	00          	breakpoint
 158:	00          	breakpoint
 159:	00          	breakpoint
 15a:	05          	add
 15b:	02          	pushsp
 15c:	00          	breakpoint
 15d:	00          	breakpoint
 15e:	00          	breakpoint
 15f:	00          	breakpoint
 160:	00          	breakpoint
 161:	01          	.byte 1
 162:	01          	.byte 1
 163:	00          	breakpoint
 164:	05          	add
 165:	02          	pushsp
 166:	00          	breakpoint
 167:	00          	breakpoint
 168:	00          	breakpoint
 169:	00          	breakpoint
 16a:	04          	poppc
 16b:	0b          	nop
 16c:	2b          	ashiftleft
 16d:	00          	breakpoint
 16e:	05          	add
 16f:	02          	pushsp
 170:	00          	breakpoint
 171:	00          	breakpoint
 172:	00          	breakpoint
 173:	00          	breakpoint
 174:	18          	addsp 32
 175:	00          	breakpoint
 176:	05          	add
 177:	02          	pushsp
 178:	00          	breakpoint
 179:	00          	breakpoint
 17a:	00          	breakpoint
 17b:	00          	breakpoint
 17c:	15          	addsp 20
 17d:	00          	breakpoint
 17e:	05          	add
 17f:	02          	pushsp
 180:	00          	breakpoint
 181:	00          	breakpoint
 182:	00          	breakpoint
 183:	00          	breakpoint
 184:	16          	addsp 24
 185:	00          	breakpoint
 186:	05          	add
 187:	02          	pushsp
 188:	00          	breakpoint
 189:	00          	breakpoint
 18a:	00          	breakpoint
 18b:	00          	breakpoint
 18c:	17          	addsp 28
 18d:	00          	breakpoint
 18e:	05          	add
 18f:	02          	pushsp
 190:	00          	breakpoint
 191:	00          	breakpoint
 192:	00          	breakpoint
 193:	00          	breakpoint
 194:	00          	breakpoint
 195:	01          	.byte 1
 196:	01          	.byte 1
 197:	00          	breakpoint
 198:	05          	add
 199:	02          	pushsp
 19a:	00          	breakpoint
 19b:	00          	breakpoint
 19c:	00          	breakpoint
 19d:	00          	breakpoint
 19e:	04          	poppc
 19f:	0b          	nop
 1a0:	3f          	callpcrel
 1a1:	00          	breakpoint
 1a2:	05          	add
 1a3:	02          	pushsp
 1a4:	00          	breakpoint
 1a5:	00          	breakpoint
 1a6:	00          	breakpoint
 1a7:	00          	breakpoint
 1a8:	16          	addsp 24
 1a9:	00          	breakpoint
 1aa:	05          	add
 1ab:	02          	pushsp
 1ac:	00          	breakpoint
 1ad:	00          	breakpoint
 1ae:	00          	breakpoint
 1af:	00          	breakpoint
 1b0:	15          	addsp 20
 1b1:	00          	breakpoint
 1b2:	05          	add
 1b3:	02          	pushsp
 1b4:	00          	breakpoint
 1b5:	00          	breakpoint
 1b6:	00          	breakpoint
 1b7:	00          	breakpoint
 1b8:	00          	breakpoint
 1b9:	01          	.byte 1
 1ba:	01          	.byte 1
 1bb:	00          	breakpoint
 1bc:	05          	add
 1bd:	02          	pushsp
 1be:	00          	breakpoint
 1bf:	00          	breakpoint
 1c0:	04          	poppc
 1c1:	9f          	im 31
 1c2:	04          	poppc
 1c3:	0b          	nop
 1c4:	48          	storesp 96
 1c5:	00          	breakpoint
 1c6:	05          	add
 1c7:	02          	pushsp
 1c8:	00          	breakpoint
 1c9:	00          	breakpoint
 1ca:	04          	poppc
 1cb:	9f          	im 31
 1cc:	15          	addsp 20
 1cd:	00          	breakpoint
 1ce:	05          	add
 1cf:	02          	pushsp
 1d0:	00          	breakpoint
 1d1:	00          	breakpoint
 1d2:	04          	poppc
 1d3:	a6          	im 38
 1d4:	16          	addsp 24
 1d5:	00          	breakpoint
 1d6:	05          	add
 1d7:	02          	pushsp
 1d8:	00          	breakpoint
 1d9:	00          	breakpoint
 1da:	04          	poppc
 1db:	ad          	im 45
 1dc:	1d          	addsp 52
 1dd:	00          	breakpoint
 1de:	05          	add
 1df:	02          	pushsp
 1e0:	00          	breakpoint
 1e1:	00          	breakpoint
 1e2:	04          	poppc
 1e3:	b7          	im 55
 1e4:	15          	addsp 20
 1e5:	00          	breakpoint
 1e6:	05          	add
 1e7:	02          	pushsp
 1e8:	00          	breakpoint
 1e9:	00          	breakpoint
 1ea:	04          	poppc
 1eb:	be          	im 62
 1ec:	15          	addsp 20
 1ed:	00          	breakpoint
 1ee:	05          	add
 1ef:	02          	pushsp
 1f0:	00          	breakpoint
 1f1:	00          	breakpoint
 1f2:	04          	poppc
 1f3:	c5          	im -59
 1f4:	1c          	addsp 48
 1f5:	00          	breakpoint
 1f6:	05          	add
 1f7:	02          	pushsp
 1f8:	00          	breakpoint
 1f9:	00          	breakpoint
 1fa:	04          	poppc
 1fb:	c6          	im -58
 1fc:	10          	addsp 0
 1fd:	00          	breakpoint
 1fe:	05          	add
 1ff:	02          	pushsp
 200:	00          	breakpoint
 201:	00          	breakpoint
 202:	04          	poppc
 203:	d2          	im -46
 204:	15          	addsp 20
 205:	00          	breakpoint
 206:	05          	add
 207:	02          	pushsp
 208:	00          	breakpoint
 209:	00          	breakpoint
 20a:	04          	poppc
 20b:	db          	im -37
 20c:	15          	addsp 20
 20d:	00          	breakpoint
 20e:	05          	add
 20f:	02          	pushsp
 210:	00          	breakpoint
 211:	00          	breakpoint
 212:	04          	poppc
 213:	e4          	im -28
 214:	16          	addsp 24
 215:	00          	breakpoint
 216:	05          	add
 217:	02          	pushsp
 218:	00          	breakpoint
 219:	00          	breakpoint
 21a:	04          	poppc
 21b:	e5          	im -27
 21c:	03          	.byte 3
 21d:	70          	loadsp 0
 21e:	01          	.byte 1
 21f:	00          	breakpoint
 220:	05          	add
 221:	02          	pushsp
 222:	00          	breakpoint
 223:	00          	breakpoint
 224:	04          	poppc
 225:	f1          	im -15
 226:	15          	addsp 20
 227:	00          	breakpoint
 228:	05          	add
 229:	02          	pushsp
 22a:	00          	breakpoint
 22b:	00          	breakpoint
 22c:	04          	poppc
 22d:	fa          	im -6
 22e:	15          	addsp 20
 22f:	00          	breakpoint
 230:	05          	add
 231:	02          	pushsp
 232:	00          	breakpoint
 233:	00          	breakpoint
 234:	05          	add
 235:	00          	breakpoint
 236:	22          	loadh
 237:	00          	breakpoint
 238:	05          	add
 239:	02          	pushsp
 23a:	00          	breakpoint
 23b:	00          	breakpoint
 23c:	05          	add
 23d:	01          	.byte 1
 23e:	00          	breakpoint
 23f:	01          	.byte 1
 240:	01          	.byte 1
 241:	00          	breakpoint
 242:	05          	add
 243:	02          	pushsp
 244:	00          	breakpoint
 245:	00          	breakpoint
 246:	00          	breakpoint
 247:	00          	breakpoint
 248:	04          	poppc
 249:	0b          	nop
 24a:	63          	loadsp 76
 24b:	00          	breakpoint
 24c:	05          	add
 24d:	02          	pushsp
 24e:	00          	breakpoint
 24f:	00          	breakpoint
 250:	00          	breakpoint
 251:	00          	breakpoint
 252:	18          	addsp 32
 253:	00          	breakpoint
 254:	05          	add
 255:	02          	pushsp
 256:	00          	breakpoint
 257:	00          	breakpoint
 258:	00          	breakpoint
 259:	00          	breakpoint
 25a:	15          	addsp 20
 25b:	00          	breakpoint
 25c:	05          	add
 25d:	02          	pushsp
 25e:	00          	breakpoint
 25f:	00          	breakpoint
 260:	00          	breakpoint
 261:	00          	breakpoint
 262:	15          	addsp 20
 263:	00          	breakpoint
 264:	05          	add
 265:	02          	pushsp
 266:	00          	breakpoint
 267:	00          	breakpoint
 268:	00          	breakpoint
 269:	00          	breakpoint
 26a:	16          	addsp 24
 26b:	00          	breakpoint
 26c:	05          	add
 26d:	02          	pushsp
 26e:	00          	breakpoint
 26f:	00          	breakpoint
 270:	00          	breakpoint
 271:	00          	breakpoint
 272:	12          	addsp 8
 273:	00          	breakpoint
 274:	05          	add
 275:	02          	pushsp
 276:	00          	breakpoint
 277:	00          	breakpoint
 278:	00          	breakpoint
 279:	00          	breakpoint
 27a:	18          	addsp 32
 27b:	00          	breakpoint
 27c:	05          	add
 27d:	02          	pushsp
 27e:	00          	breakpoint
 27f:	00          	breakpoint
 280:	00          	breakpoint
 281:	00          	breakpoint
 282:	15          	addsp 20
 283:	00          	breakpoint
 284:	05          	add
 285:	02          	pushsp
 286:	00          	breakpoint
 287:	00          	breakpoint
 288:	00          	breakpoint
 289:	00          	breakpoint
 28a:	00          	breakpoint
 28b:	01          	.byte 1
 28c:	01          	.byte 1
 28d:	00          	breakpoint
 28e:	00          	breakpoint
 28f:	00          	breakpoint
 290:	16          	addsp 24
 291:	00          	breakpoint
 292:	02          	pushsp
 293:	00          	breakpoint
 294:	00          	breakpoint
 295:	00          	breakpoint
 296:	10          	addsp 0
 297:	01          	.byte 1
 298:	01          	.byte 1
 299:	fb          	im -5
 29a:	0e          	.byte 14
 29b:	0a          	flip
 29c:	00          	breakpoint
 29d:	01          	.byte 1
 29e:	01          	.byte 1
 29f:	01          	.byte 1
 2a0:	01          	.byte 1
 2a1:	00          	breakpoint
 2a2:	00          	breakpoint
 2a3:	00          	breakpoint
 2a4:	01          	.byte 1
	...
Disassembly of section .debug_frame:

00000000 <.Lframe0>:
   0:	00          	breakpoint
   1:	00          	breakpoint
   2:	00          	breakpoint
   3:	10          	addsp 0
   4:	ff          	im -1
   5:	ff          	im -1
   6:	ff          	im -1
   7:	ff          	im -1
   8:	01          	.byte 1
   9:	00          	breakpoint
   a:	01          	.byte 1
   b:	7c          	loadsp 48
   c:	24          	lessthan
   d:	0c          	store
   e:	20          	.byte 32
   f:	04          	poppc
  10:	a4          	im 36
  11:	01          	.byte 1
  12:	00          	breakpoint
  13:	00          	breakpoint
  14:	00          	breakpoint
  15:	00          	breakpoint
  16:	00          	breakpoint
  17:	1c          	addsp 48
	...
  20:	00          	breakpoint
  21:	00          	breakpoint
  22:	00          	breakpoint
  23:	2d          	call
  24:	04          	poppc
  25:	00          	breakpoint
  26:	00          	breakpoint
  27:	00          	breakpoint
  28:	03          	.byte 3
  29:	0e          	.byte 14
  2a:	10          	addsp 0
  2b:	04          	poppc
  2c:	00          	breakpoint
  2d:	00          	breakpoint
  2e:	00          	breakpoint
  2f:	29          	mult
  30:	0e          	.byte 14
  31:	04          	poppc
  32:	00          	breakpoint
  33:	00          	breakpoint
  34:	00          	breakpoint
  35:	00          	breakpoint
  36:	00          	breakpoint
  37:	1c          	addsp 48
	...
  40:	00          	breakpoint
  41:	00          	breakpoint
  42:	00          	breakpoint
  43:	25          	lessthanorequal
  44:	04          	poppc
  45:	00          	breakpoint
  46:	00          	breakpoint
  47:	00          	breakpoint
  48:	03          	.byte 3
  49:	0e          	.byte 14
  4a:	0c          	store
  4b:	04          	poppc
  4c:	00          	breakpoint
  4d:	00          	breakpoint
  4e:	00          	breakpoint
  4f:	21          	.byte 33
  50:	0e          	.byte 14
  51:	04          	poppc
  52:	00          	breakpoint
  53:	00          	breakpoint
  54:	00          	breakpoint
  55:	00          	breakpoint
  56:	00          	breakpoint
  57:	0c          	store
  58:	00          	breakpoint
  59:	00          	breakpoint
  5a:	00          	breakpoint
  5b:	00          	breakpoint
  5c:	00          	breakpoint
  5d:	00          	breakpoint
  5e:	04          	poppc
  5f:	9f          	im 31
  60:	00          	breakpoint
  61:	00          	breakpoint
  62:	00          	breakpoint
  63:	85          	im 5
  64:	00          	breakpoint
  65:	00          	breakpoint
  66:	00          	breakpoint
  67:	1c          	addsp 48
	...
  70:	00          	breakpoint
  71:	00          	breakpoint
  72:	00          	breakpoint
  73:	70          	loadsp 0
  74:	04          	poppc
  75:	00          	breakpoint
  76:	00          	breakpoint
  77:	00          	breakpoint
  78:	03          	.byte 3
  79:	0e          	.byte 14
  7a:	40          	storesp 64
  7b:	04          	poppc
  7c:	00          	breakpoint
  7d:	00          	breakpoint
  7e:	00          	breakpoint
  7f:	5f          	storesp 60
  80:	0e          	.byte 14
  81:	04          	poppc
	...
Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	5f          	storesp 60
   1:	63          	loadsp 76
   2:	70          	loadsp 0
   3:	75          	loadsp 20
   4:	5f          	storesp 60
   5:	63          	loadsp 76
   6:	6f          	loadsp 124
   7:	6e          	loadsp 120
   8:	66          	loadsp 88
   9:	69          	loadsp 100
   a:	67          	loadsp 92
   b:	00          	breakpoint
   c:	6c          	loadsp 112
   d:	6f          	loadsp 124
   e:	6e          	loadsp 120
   f:	67          	loadsp 92
  10:	20          	.byte 32
  11:	6c          	loadsp 112
  12:	6f          	loadsp 124
  13:	6e          	loadsp 120
  14:	67          	loadsp 92
  15:	20          	.byte 32
  16:	75          	loadsp 20
  17:	6e          	loadsp 120
  18:	73          	loadsp 12
  19:	69          	loadsp 100
  1a:	67          	loadsp 92
  1b:	6e          	loadsp 120
  1c:	65          	loadsp 84
  1d:	64          	loadsp 80
  1e:	20          	.byte 32
  1f:	69          	loadsp 100
  20:	6e          	loadsp 120
  21:	74          	loadsp 16
  22:	00          	breakpoint
  23:	2f          	neq
  24:	68          	loadsp 96
  25:	6f          	loadsp 124
  26:	6d          	loadsp 116
  27:	65          	loadsp 84
  28:	2f          	neq
  29:	61          	loadsp 68
  2a:	6c          	loadsp 112
  2b:	76          	loadsp 24
  2c:	69          	loadsp 100
  2d:	65          	loadsp 84
  2e:	62          	loadsp 72
  2f:	6f          	loadsp 124
  30:	79          	loadsp 36
  31:	2f          	neq
  32:	7a          	loadsp 40
  33:	70          	loadsp 0
  34:	75          	loadsp 20
  35:	2f          	neq
  36:	74          	loadsp 16
  37:	6f          	loadsp 124
  38:	6f          	loadsp 124
  39:	6c          	loadsp 112
  3a:	63          	loadsp 76
  3b:	68          	loadsp 96
  3c:	61          	loadsp 68
  3d:	69          	loadsp 100
  3e:	6e          	loadsp 120
  3f:	2f          	neq
  40:	74          	loadsp 16
  41:	6f          	loadsp 124
  42:	6f          	loadsp 124
  43:	6c          	loadsp 112
  44:	63          	loadsp 76
  45:	68          	loadsp 96
  46:	61          	loadsp 68
  47:	69          	loadsp 100
  48:	6e          	loadsp 120
  49:	2f          	neq
  4a:	74          	loadsp 16
  4b:	6f          	loadsp 124
  4c:	6f          	loadsp 124
  4d:	6c          	loadsp 112
  4e:	63          	loadsp 76
  4f:	68          	loadsp 96
  50:	61          	loadsp 68
  51:	69          	loadsp 100
  52:	6e          	loadsp 120
  53:	2f          	neq
  54:	67          	loadsp 92
  55:	63          	loadsp 76
  56:	63          	loadsp 76
  57:	62          	loadsp 72
  58:	75          	loadsp 20
  59:	69          	loadsp 100
  5a:	6c          	loadsp 112
  5b:	64          	loadsp 80
  5c:	2f          	neq
  5d:	7a          	loadsp 40
  5e:	70          	loadsp 0
  5f:	75          	loadsp 20
  60:	2d          	call
  61:	65          	loadsp 84
  62:	6c          	loadsp 112
  63:	66          	loadsp 88
  64:	2f          	neq
  65:	6c          	loadsp 112
  66:	69          	loadsp 100
  67:	62          	loadsp 72
  68:	67          	loadsp 92
  69:	6c          	loadsp 112
  6a:	6f          	loadsp 124
  6b:	73          	loadsp 12
  6c:	73          	loadsp 12
  6d:	2f          	neq
  6e:	7a          	loadsp 40
  6f:	70          	loadsp 0
  70:	75          	loadsp 20
  71:	00          	breakpoint
  72:	6c          	loadsp 112
  73:	6f          	loadsp 124
  74:	6e          	loadsp 120
  75:	67          	loadsp 92
  76:	20          	.byte 32
  77:	6c          	loadsp 112
  78:	6f          	loadsp 124
  79:	6e          	loadsp 120
  7a:	67          	loadsp 92
  7b:	20          	.byte 32
  7c:	69          	loadsp 100
  7d:	6e          	loadsp 120
  7e:	74          	loadsp 16
  7f:	00          	breakpoint
  80:	54          	storesp 16
  81:	49          	storesp 100
  82:	4d          	storesp 116
  83:	45          	storesp 84
  84:	52          	storesp 8
  85:	00          	breakpoint
  86:	6f          	loadsp 124
  87:	75          	loadsp 20
  88:	74          	loadsp 16
  89:	62          	loadsp 72
  8a:	79          	loadsp 36
  8b:	74          	loadsp 16
  8c:	65          	loadsp 84
  8d:	00          	breakpoint
  8e:	5f          	storesp 60
  8f:	72          	loadsp 8
  90:	65          	loadsp 84
  91:	61          	loadsp 68
  92:	64          	loadsp 80
  93:	43          	storesp 76
  94:	79          	loadsp 36
  95:	63          	loadsp 76
  96:	6c          	loadsp 112
  97:	65          	loadsp 84
  98:	73          	loadsp 12
  99:	00          	breakpoint
  9a:	73          	loadsp 12
  9b:	68          	loadsp 96
  9c:	6f          	loadsp 124
  9d:	72          	loadsp 8
  9e:	74          	loadsp 16
  9f:	20          	.byte 32
  a0:	75          	loadsp 20
  a1:	6e          	loadsp 120
  a2:	73          	loadsp 12
  a3:	69          	loadsp 100
  a4:	67          	loadsp 92
  a5:	6e          	loadsp 120
  a6:	65          	loadsp 84
  a7:	64          	loadsp 80
  a8:	20          	.byte 32
  a9:	69          	loadsp 100
  aa:	6e          	loadsp 120
  ab:	74          	loadsp 16
  ac:	00          	breakpoint
  ad:	47          	storesp 92
  ae:	4e          	storesp 120
  af:	55          	storesp 20
  b0:	20          	.byte 32
  b1:	43          	storesp 76
  b2:	20          	.byte 32
  b3:	33          	loadb
  b4:	2e          	eq
  b5:	34          	storeb
  b6:	2e          	eq
  b7:	32          	xor
  b8:	00          	breakpoint
  b9:	5f          	storesp 60
  ba:	68          	loadsp 96
  bb:	61          	loadsp 68
  bc:	72          	loadsp 8
  bd:	64          	loadsp 80
  be:	77          	loadsp 28
  bf:	61          	loadsp 68
  c0:	72          	loadsp 8
  c1:	65          	loadsp 84
  c2:	00          	breakpoint
  c3:	2e          	eq
  c4:	2e          	eq
  c5:	2f          	neq
  c6:	2e          	eq
  c7:	2e          	eq
  c8:	2f          	neq
  c9:	2e          	eq
  ca:	2e          	eq
  cb:	2f          	neq
  cc:	2e          	eq
  cd:	2e          	eq
  ce:	2f          	neq
  cf:	67          	loadsp 92
  d0:	63          	loadsp 76
  d1:	63          	loadsp 76
  d2:	2f          	neq
  d3:	6c          	loadsp 112
  d4:	69          	loadsp 100
  d5:	62          	loadsp 72
  d6:	67          	loadsp 92
  d7:	6c          	loadsp 112
  d8:	6f          	loadsp 124
  d9:	73          	loadsp 12
  da:	73          	loadsp 12
  db:	2f          	neq
  dc:	7a          	loadsp 40
  dd:	70          	loadsp 0
  de:	75          	loadsp 20
  df:	2f          	neq
  e0:	63          	loadsp 76
  e1:	72          	loadsp 8
  e2:	74          	loadsp 16
  e3:	5f          	storesp 60
  e4:	69          	loadsp 100
  e5:	6f          	loadsp 124
  e6:	2e          	eq
  e7:	63          	loadsp 76
  e8:	00          	breakpoint
  e9:	75          	loadsp 20
  ea:	6e          	loadsp 120
  eb:	73          	loadsp 12
  ec:	69          	loadsp 100
  ed:	67          	loadsp 92
  ee:	6e          	loadsp 120
  ef:	65          	loadsp 84
  f0:	64          	loadsp 80
  f1:	20          	.byte 32
  f2:	63          	loadsp 76
  f3:	68          	loadsp 96
  f4:	61          	loadsp 68
  f5:	72          	loadsp 8
  f6:	00          	breakpoint
  f7:	73          	loadsp 12
  f8:	68          	loadsp 96
  f9:	6f          	loadsp 124
  fa:	72          	loadsp 8
  fb:	74          	loadsp 16
  fc:	20          	.byte 32
  fd:	69          	loadsp 100
  fe:	6e          	loadsp 120
  ff:	74          	loadsp 16
 100:	00          	breakpoint
 101:	69          	loadsp 100
 102:	6e          	loadsp 120
 103:	62          	loadsp 72
 104:	79          	loadsp 36
 105:	74          	loadsp 16
 106:	65          	loadsp 84
 107:	00          	breakpoint
 108:	55          	storesp 20
 109:	41          	storesp 68
 10a:	52          	storesp 8
 10b:	54          	storesp 16
 10c:	00          	breakpoint
 10d:	5f          	storesp 60
 10e:	69          	loadsp 100
 10f:	6e          	loadsp 120
 110:	69          	loadsp 100
 111:	74          	loadsp 16
 112:	49          	storesp 100
 113:	4f          	storesp 124
 114:	00          	breakpoint
 115:	63          	loadsp 76
 116:	6c          	loadsp 112
 117:	6f          	loadsp 124
 118:	63          	loadsp 76
 119:	6b          	loadsp 108
	...
